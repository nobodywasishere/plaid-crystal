#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./asset_report_user"

module Plaid
  # An optional object to filter `/asset_report/refresh` results. If provided, cannot be `null`. If not specified, the `options` from the original call to `/asset_report/create` will be used.
  class AssetReportRefreshRequestOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Client-generated identifier, which can be used by lenders to track loan applications.
    @[JSON::Field(key: "client_report_id", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: client_report_id.nil? && !client_report_id_present?)]
    getter client_report_id : String? = nil

    @[JSON::Field(ignore: true)]
    property? client_report_id_present : Bool = false

    # URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
    @[JSON::Field(key: "webhook", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: webhook.nil? && !webhook_present?)]
    getter webhook : String? = nil

    @[JSON::Field(ignore: true)]
    property? webhook_present : Bool = false

    @[JSON::Field(key: "user", type: AssetReportUser?, default: nil, required: false, nullable: false, emit_null: false)]
    getter user : AssetReportUser? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @client_report_id : String? = nil,
      @webhook : String? = nil,
      @user : AssetReportUser? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_client_report_id = @client_report_id).nil?
      end
      unless (_webhook = @webhook).nil?
      end
      unless (_user = @user).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_client_report_id = @client_report_id).nil?
      end

      unless (_webhook = @webhook).nil?
      end

      unless (_user = @user).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_report_id Object to be assigned
    def client_report_id=(new_value : String?)
      unless new_value.nil?
      end

      @client_report_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook Object to be assigned
    def webhook=(new_value : String?)
      unless new_value.nil?
      end

      @webhook = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] user Object to be assigned
    def user=(new_value : AssetReportUser?)
      unless new_value.nil?
      end

      @user = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@client_report_id, @client_report_id_present, @webhook, @webhook_present, @user)
  end
end
