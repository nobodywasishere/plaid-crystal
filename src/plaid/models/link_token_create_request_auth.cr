#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Specifies options for initializing Link for use with the Auth product. This field can be used to enable or disable extended Auth flows for the resulting Link session. Omitting any field will result in a default that can be configured by your account manager.
  class LinkTokenCreateRequestAuth
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Specifies whether Auth Type Select is enabled for the Link session, allowing the end user to choose between linking instantly or manually prior to selecting their financial institution. Note that this can only be true if `same_day_microdeposits_enabled` is set to true.
    @[JSON::Field(key: "auth_type_select_enabled", type: Bool?, default: false, required: false, nullable: false, emit_null: false)]
    getter auth_type_select_enabled : Bool? = false

    # Specifies whether the Link session is enabled for the Automated Micro-deposits flow.
    @[JSON::Field(key: "automated_microdeposits_enabled", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter automated_microdeposits_enabled : Bool? = nil

    # Specifies whether the Link session is enabled for the Instant Match flow. As of November 2022, Instant Match will be enabled by default. Instant Match can be disabled by setting this field to `false`.
    @[JSON::Field(key: "instant_match_enabled", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter instant_match_enabled : Bool? = nil

    # Specifies whether the Link session is enabled for the Same Day Micro-deposits flow.
    @[JSON::Field(key: "same_day_microdeposits_enabled", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter same_day_microdeposits_enabled : Bool? = nil

    # Specifies whether the Link session is enabled for the Instant Micro-deposits flow.
    @[JSON::Field(key: "instant_microdeposits_enabled", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter instant_microdeposits_enabled : Bool? = nil

    # Specifies what type of [Reroute to Credentials](https://plaid.com/docs/auth/coverage/same-day/#reroute-to-credentials) pane should be used in the Link session for the Same Day Micro-deposits flow. As of October 15 2023, the default setting is `OPTIONAL`.
    @[JSON::Field(key: "reroute_to_credentials", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter reroute_to_credentials : String? = nil
    ERROR_MESSAGE_FOR_REROUTE_TO_CREDENTIALS = "invalid value for \"reroute_to_credentials\", must be one of [OFF, OPTIONAL, FORCED]."
    VALID_VALUES_FOR_REROUTE_TO_CREDENTIALS  = String.static_array("OFF", "OPTIONAL", "FORCED")

    # Specifies whether the Link session is enabled for the Database Match flow.
    @[JSON::Field(key: "database_match_enabled", type: Bool?, default: nil, required: false, nullable: false, emit_null: false)]
    getter database_match_enabled : Bool? = nil

    # This field has been deprecated in favor of `auth_type_select_enabled`.
    @[JSON::Field(key: "flow_type", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter flow_type : String? = nil
    ERROR_MESSAGE_FOR_FLOW_TYPE = "invalid value for \"flow_type\", must be one of [FLEXIBLE_AUTH]."
    VALID_VALUES_FOR_FLOW_TYPE  = String.static_array("FLEXIBLE_AUTH")

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @auth_type_select_enabled : Bool? = false,
      @automated_microdeposits_enabled : Bool? = nil,
      @instant_match_enabled : Bool? = nil,
      @same_day_microdeposits_enabled : Bool? = nil,
      @instant_microdeposits_enabled : Bool? = nil,
      @reroute_to_credentials : String? = nil,
      @database_match_enabled : Bool? = nil,
      @flow_type : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_auth_type_select_enabled = @auth_type_select_enabled).nil?
      end
      unless (_automated_microdeposits_enabled = @automated_microdeposits_enabled).nil?
      end
      unless (_instant_match_enabled = @instant_match_enabled).nil?
      end
      unless (_same_day_microdeposits_enabled = @same_day_microdeposits_enabled).nil?
      end
      unless (_instant_microdeposits_enabled = @instant_microdeposits_enabled).nil?
      end
      unless (_reroute_to_credentials = @reroute_to_credentials).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_REROUTE_TO_CREDENTIALS) unless OpenApi::EnumValidator.valid?(_reroute_to_credentials, VALID_VALUES_FOR_REROUTE_TO_CREDENTIALS)
      end
      unless (_database_match_enabled = @database_match_enabled).nil?
      end
      unless (_flow_type = @flow_type).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_FLOW_TYPE) unless OpenApi::EnumValidator.valid?(_flow_type, VALID_VALUES_FOR_FLOW_TYPE)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_auth_type_select_enabled = @auth_type_select_enabled).nil?
      end

      unless (_automated_microdeposits_enabled = @automated_microdeposits_enabled).nil?
      end

      unless (_instant_match_enabled = @instant_match_enabled).nil?
      end

      unless (_same_day_microdeposits_enabled = @same_day_microdeposits_enabled).nil?
      end

      unless (_instant_microdeposits_enabled = @instant_microdeposits_enabled).nil?
      end

      unless (_reroute_to_credentials = @reroute_to_credentials).nil?
        return false unless OpenApi::EnumValidator.valid?(_reroute_to_credentials, VALID_VALUES_FOR_REROUTE_TO_CREDENTIALS)
      end

      unless (_database_match_enabled = @database_match_enabled).nil?
      end

      unless (_flow_type = @flow_type).nil?
        return false unless OpenApi::EnumValidator.valid?(_flow_type, VALID_VALUES_FOR_FLOW_TYPE)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] auth_type_select_enabled Object to be assigned
    def auth_type_select_enabled=(new_value : Bool?)
      unless new_value.nil?
      end

      @auth_type_select_enabled = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] automated_microdeposits_enabled Object to be assigned
    def automated_microdeposits_enabled=(new_value : Bool?)
      unless new_value.nil?
      end

      @automated_microdeposits_enabled = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] instant_match_enabled Object to be assigned
    def instant_match_enabled=(new_value : Bool?)
      unless new_value.nil?
      end

      @instant_match_enabled = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] same_day_microdeposits_enabled Object to be assigned
    def same_day_microdeposits_enabled=(new_value : Bool?)
      unless new_value.nil?
      end

      @same_day_microdeposits_enabled = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] instant_microdeposits_enabled Object to be assigned
    def instant_microdeposits_enabled=(new_value : Bool?)
      unless new_value.nil?
      end

      @instant_microdeposits_enabled = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] reroute_to_credentials Object to be assigned
    def reroute_to_credentials=(new_value : String?)
      unless new_value.nil?
        OpenApi::EnumValidator.validate("reroute_to_credentials", new_value, VALID_VALUES_FOR_REROUTE_TO_CREDENTIALS)
      end

      @reroute_to_credentials = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] database_match_enabled Object to be assigned
    def database_match_enabled=(new_value : Bool?)
      unless new_value.nil?
      end

      @database_match_enabled = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] flow_type Object to be assigned
    def flow_type=(new_value : String?)
      unless new_value.nil?
        OpenApi::EnumValidator.validate("flow_type", new_value, VALID_VALUES_FOR_FLOW_TYPE)
      end

      @flow_type = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@auth_type_select_enabled, @automated_microdeposits_enabled, @instant_match_enabled, @same_day_microdeposits_enabled, @instant_microdeposits_enabled, @reroute_to_credentials, @database_match_enabled, @flow_type)
  end
end
