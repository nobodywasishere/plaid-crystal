#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./link_session_exit"
require "./link_session_success"

module Plaid
  # An object containing information about a link session.
  class LinkTokenGetSessionsResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The unique ID for the link session.
    @[JSON::Field(key: "link_session_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter link_session_id : String? = nil

    # End of Required Properties

    # Optional Properties

    # The timestamp at which the link session was first started, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
    @[JSON::Field(key: "started_at", type: Time?, default: nil, required: false, nullable: false, emit_null: false, converter: Time::RFC3339Converter)]
    getter started_at : Time? = nil

    # The timestamp at which the link session was finished, if available, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format.
    @[JSON::Field(key: "finished_at", type: Time?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: finished_at.nil? && !finished_at_present?, converter: Time::RFC3339Converter)]
    getter finished_at : Time? = nil

    @[JSON::Field(ignore: true)]
    property? finished_at_present : Bool = false

    @[JSON::Field(key: "on_success", type: Plaid::LinkSessionSuccess?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: on_success.nil? && !on_success_present?)]
    getter on_success : Plaid::LinkSessionSuccess? = nil

    @[JSON::Field(ignore: true)]
    property? on_success_present : Bool = false

    @[JSON::Field(key: "on_exit", type: LinkSessionExit?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: on_exit.nil? && !on_exit_present?)]
    getter on_exit : LinkSessionExit? = nil

    @[JSON::Field(ignore: true)]
    property? on_exit_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @link_session_id : String? = nil,
      # Optional properties
      @started_at : Time? = nil,
      @finished_at : Time? = nil,
      @on_success : Plaid::LinkSessionSuccess? = nil,
      @on_exit : LinkSessionExit? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"link_session_id\" is required and cannot be null") if @link_session_id.nil?

      unless (_link_session_id = @link_session_id).nil?
      end
      unless (_started_at = @started_at).nil?
      end
      unless (_finished_at = @finished_at).nil?
      end
      unless (_on_success = @on_success).nil?
        invalid_properties.concat(_on_success.list_invalid_properties_for("on_success")) if _on_success.is_a?(OpenApi::Validatable)
      end
      unless (_on_exit = @on_exit).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @link_session_id.nil?
      unless (_link_session_id = @link_session_id).nil?
      end

      unless (_started_at = @started_at).nil?
      end

      unless (_finished_at = @finished_at).nil?
      end

      unless (_on_success = @on_success).nil?
        return false if _on_success.is_a?(OpenApi::Validatable) && !_on_success.valid?
      end

      unless (_on_exit = @on_exit).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] link_session_id Object to be assigned
    def link_session_id=(new_value : String?)
      raise ArgumentError.new("\"link_session_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @link_session_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] started_at Object to be assigned
    def started_at=(new_value : Time?)
      unless new_value.nil?
      end

      @started_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] finished_at Object to be assigned
    def finished_at=(new_value : Time?)
      unless new_value.nil?
      end

      @finished_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] on_success Object to be assigned
    def on_success=(new_value : Plaid::LinkSessionSuccess?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @on_success = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] on_exit Object to be assigned
    def on_exit=(new_value : LinkSessionExit?)
      unless new_value.nil?
      end

      @on_exit = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@link_session_id, @started_at, @finished_at, @finished_at_present, @on_success, @on_success_present, @on_exit, @on_exit_present)
  end
end
