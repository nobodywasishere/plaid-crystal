#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./transaction_stream"

module Plaid
  # TransactionsRecurringCreateResponse defines the response schema for the `/transactions/recurring/streams/create` endpoint.
  class TransactionsRecurringCreateResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Streams created as a result of the operation.
    @[JSON::Field(key: "added_streams", type: Array(TransactionStream)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter added_streams : Array(TransactionStream)? = nil

    # End of Required Properties

    # Optional Properties

    # Other streams with transactions removed from them as a result of the operation (in no particular order).
    @[JSON::Field(key: "modified_streams", type: Array(TransactionStream)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter modified_streams : Array(TransactionStream)? = nil

    # The ids of streams that are no longer qualified as recurring transaction streams (in no particular order).
    @[JSON::Field(key: "removed_stream_ids", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter removed_stream_ids : Array(String)? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @added_streams : Array(TransactionStream)? = nil,
      # Optional properties
      @modified_streams : Array(TransactionStream)? = nil,
      @removed_stream_ids : Array(String)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"added_streams\" is required and cannot be null") if @added_streams.nil?

      unless (_added_streams = @added_streams).nil?
      end
      unless (_modified_streams = @modified_streams).nil?
      end
      unless (_removed_stream_ids = @removed_stream_ids).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @added_streams.nil?
      unless (_added_streams = @added_streams).nil?
      end

      unless (_modified_streams = @modified_streams).nil?
      end

      unless (_removed_stream_ids = @removed_stream_ids).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] added_streams Object to be assigned
    def added_streams=(new_value : Array(TransactionStream)?)
      raise ArgumentError.new("\"added_streams\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @added_streams = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] modified_streams Object to be assigned
    def modified_streams=(new_value : Array(TransactionStream)?)
      unless new_value.nil?
      end

      @modified_streams = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] removed_stream_ids Object to be assigned
    def removed_stream_ids=(new_value : Array(String)?)
      unless new_value.nil?
      end

      @removed_stream_ids = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@added_streams, @modified_streams, @removed_stream_ids)
  end
end
