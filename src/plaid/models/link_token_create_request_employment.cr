#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./employment_source_type"
require "./link_token_create_request_employment_bank_income"

module Plaid
  # Specifies options for initializing Link for use with the Employment product. This field is required if `employment` is included in the `products` array.
  class LinkTokenCreateRequestEmployment
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The types of source employment data that users will be permitted to share. Options include `bank` and `payroll`. Currently you can only specify one of these options.
    @[JSON::Field(key: "employment_source_types", type: Array(EmploymentSourceType)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter employment_source_types : Array(EmploymentSourceType)? = nil

    @[JSON::Field(key: "bank_employment", type: Plaid::LinkTokenCreateRequestEmploymentBankIncome?, default: nil, required: false, nullable: false, emit_null: false)]
    getter bank_employment : Plaid::LinkTokenCreateRequestEmploymentBankIncome? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @employment_source_types : Array(EmploymentSourceType)? = nil,
      @bank_employment : Plaid::LinkTokenCreateRequestEmploymentBankIncome? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_employment_source_types = @employment_source_types).nil?
      end
      unless (_bank_employment = @bank_employment).nil?
        invalid_properties.concat(_bank_employment.list_invalid_properties_for("bank_employment")) if _bank_employment.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_employment_source_types = @employment_source_types).nil?
      end

      unless (_bank_employment = @bank_employment).nil?
        return false if _bank_employment.is_a?(OpenApi::Validatable) && !_bank_employment.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] employment_source_types Object to be assigned
    def employment_source_types=(new_value : Array(EmploymentSourceType)?)
      unless new_value.nil?
      end

      @employment_source_types = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_employment Object to be assigned
    def bank_employment=(new_value : Plaid::LinkTokenCreateRequestEmploymentBankIncome?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @bank_employment = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@employment_source_types, @bank_employment)
  end
end
