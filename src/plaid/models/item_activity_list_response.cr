#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./activity"
require "./last_data_access_times"

module Plaid
  # Describes a historical log of user consent events.
  class ItemActivityListResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    @[JSON::Field(key: "request_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter request_id : String? = nil

    # A list of activities.
    @[JSON::Field(key: "activities", type: Array(Plaid::Activity)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter activities : Array(Plaid::Activity)? = nil

    # An array of objects containing timestamps for the last time each data type was accessed per application.
    @[JSON::Field(key: "last_data_access_times", type: Array(LastDataAccessTimes)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter last_data_access_times : Array(LastDataAccessTimes)? = nil

    # End of Required Properties

    # Optional Properties

    # Cursor used for pagination.
    @[JSON::Field(key: "cursor", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter cursor : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @request_id : String? = nil,
      @activities : Array(Plaid::Activity)? = nil,
      @last_data_access_times : Array(LastDataAccessTimes)? = nil,
      # Optional properties
      @cursor : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"request_id\" is required and cannot be null") if @request_id.nil?

      unless (_request_id = @request_id).nil?
      end
      invalid_properties.push("\"activities\" is required and cannot be null") if @activities.nil?

      unless (_activities = @activities).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "activities", container: _activities)) if _activities.is_a?(Array)
      end
      invalid_properties.push("\"last_data_access_times\" is required and cannot be null") if @last_data_access_times.nil?

      unless (_last_data_access_times = @last_data_access_times).nil?
      end
      unless (_cursor = @cursor).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @request_id.nil?
      unless (_request_id = @request_id).nil?
      end

      return false if @activities.nil?
      unless (_activities = @activities).nil?
        return false if _activities.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _activities)
      end

      return false if @last_data_access_times.nil?
      unless (_last_data_access_times = @last_data_access_times).nil?
      end

      unless (_cursor = @cursor).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] request_id Object to be assigned
    def request_id=(new_value : String?)
      raise ArgumentError.new("\"request_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @request_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] activities Object to be assigned
    def activities=(new_value : Array(Plaid::Activity)?)
      raise ArgumentError.new("\"activities\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @activities = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] last_data_access_times Object to be assigned
    def last_data_access_times=(new_value : Array(LastDataAccessTimes)?)
      raise ArgumentError.new("\"last_data_access_times\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @last_data_access_times = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] cursor Object to be assigned
    def cursor=(new_value : String?)
      unless new_value.nil?
      end

      @cursor = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@request_id, @activities, @last_data_access_times, @cursor)
  end
end
