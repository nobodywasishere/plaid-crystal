#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./partner_end_customer_flowdown_status"
require "./partner_end_customer_o_auth_institution"
require "./partner_end_customer_questionnaire_status"

module Plaid
  # Response schema for `/partner/customer/oauth_institutions/get`.
  class PartnerCustomerOAuthInstitutionsGetResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "flowdown_status", type: Plaid::PartnerEndCustomerFlowdownStatus?, default: nil, required: false, nullable: false, emit_null: false)]
    getter flowdown_status : Plaid::PartnerEndCustomerFlowdownStatus? = nil

    @[JSON::Field(key: "questionnaire_status", type: Plaid::PartnerEndCustomerQuestionnaireStatus?, default: nil, required: false, nullable: false, emit_null: false)]
    getter questionnaire_status : Plaid::PartnerEndCustomerQuestionnaireStatus? = nil

    # The OAuth institutions with which the end customer's application is being registered.
    @[JSON::Field(key: "institutions", type: Array(PartnerEndCustomerOAuthInstitution)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter institutions : Array(PartnerEndCustomerOAuthInstitution)? = nil

    # A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    @[JSON::Field(key: "request_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter request_id : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @flowdown_status : Plaid::PartnerEndCustomerFlowdownStatus? = nil,
      @questionnaire_status : Plaid::PartnerEndCustomerQuestionnaireStatus? = nil,
      @institutions : Array(PartnerEndCustomerOAuthInstitution)? = nil,
      @request_id : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_flowdown_status = @flowdown_status).nil?
        invalid_properties.push(_flowdown_status.error_message) if !_flowdown_status.valid?
      end
      unless (_questionnaire_status = @questionnaire_status).nil?
        invalid_properties.push(_questionnaire_status.error_message) if !_questionnaire_status.valid?
      end
      unless (_institutions = @institutions).nil?
      end
      unless (_request_id = @request_id).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_flowdown_status = @flowdown_status).nil?
        return false if !_flowdown_status.valid?
      end

      unless (_questionnaire_status = @questionnaire_status).nil?
        return false if !_questionnaire_status.valid?
      end

      unless (_institutions = @institutions).nil?
      end

      unless (_request_id = @request_id).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] flowdown_status Object to be assigned
    def flowdown_status=(new_value : Plaid::PartnerEndCustomerFlowdownStatus?)
      unless new_value.nil?
        new_value.validate
      end

      @flowdown_status = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] questionnaire_status Object to be assigned
    def questionnaire_status=(new_value : Plaid::PartnerEndCustomerQuestionnaireStatus?)
      unless new_value.nil?
        new_value.validate
      end

      @questionnaire_status = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institutions Object to be assigned
    def institutions=(new_value : Array(PartnerEndCustomerOAuthInstitution)?)
      unless new_value.nil?
      end

      @institutions = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] request_id Object to be assigned
    def request_id=(new_value : String?)
      unless new_value.nil?
      end

      @request_id = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@flowdown_status, @questionnaire_status, @institutions, @request_id)
  end
end
