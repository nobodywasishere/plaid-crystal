#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./credit_bank_employment_item"
require "./credit_bank_employment_warning"

module Plaid
  # The report of the Bank Employment data for an end user.
  class CreditBankEmploymentReport
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The unique identifier associated with the Bank Employment Report.
    @[JSON::Field(key: "bank_employment_report_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter bank_employment_report_id : String? = nil

    # The time when the Bank Employment Report was generated, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. \"2018-04-12T03:32:11Z\").
    @[JSON::Field(key: "generated_time", type: Time?, default: nil, required: true, nullable: false, emit_null: false, converter: Time::RFC3339Converter)]
    getter generated_time : Time? = nil

    # The number of days requested by the customer for the Bank Employment Report.
    @[JSON::Field(key: "days_requested", type: Int32?, default: nil, required: true, nullable: false, emit_null: false)]
    getter days_requested : Int32? = nil

    # The list of Items in the report along with the associated metadata about the Item.
    @[JSON::Field(key: "items", type: Array(Plaid::CreditBankEmploymentItem)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter items : Array(Plaid::CreditBankEmploymentItem)? = nil

    # If data from the Bank Employment report was unable to be retrieved, the warnings will contain information about the error that caused the data to be incomplete.
    @[JSON::Field(key: "warnings", type: Array(Plaid::CreditBankEmploymentWarning)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter warnings : Array(Plaid::CreditBankEmploymentWarning)? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @bank_employment_report_id : String? = nil,
      @generated_time : Time? = nil,
      @days_requested : Int32? = nil,
      @items : Array(Plaid::CreditBankEmploymentItem)? = nil,
      @warnings : Array(Plaid::CreditBankEmploymentWarning)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"bank_employment_report_id\" is required and cannot be null") if @bank_employment_report_id.nil?

      unless (_bank_employment_report_id = @bank_employment_report_id).nil?
      end
      invalid_properties.push("\"generated_time\" is required and cannot be null") if @generated_time.nil?

      unless (_generated_time = @generated_time).nil?
      end
      invalid_properties.push("\"days_requested\" is required and cannot be null") if @days_requested.nil?

      unless (_days_requested = @days_requested).nil?
      end
      invalid_properties.push("\"items\" is required and cannot be null") if @items.nil?

      unless (_items = @items).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "items", container: _items)) if _items.is_a?(Array)
      end
      invalid_properties.push("\"warnings\" is required and cannot be null") if @warnings.nil?

      unless (_warnings = @warnings).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "warnings", container: _warnings)) if _warnings.is_a?(Array)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @bank_employment_report_id.nil?
      unless (_bank_employment_report_id = @bank_employment_report_id).nil?
      end

      return false if @generated_time.nil?
      unless (_generated_time = @generated_time).nil?
      end

      return false if @days_requested.nil?
      unless (_days_requested = @days_requested).nil?
      end

      return false if @items.nil?
      unless (_items = @items).nil?
        return false if _items.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _items)
      end

      return false if @warnings.nil?
      unless (_warnings = @warnings).nil?
        return false if _warnings.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _warnings)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_employment_report_id Object to be assigned
    def bank_employment_report_id=(new_value : String?)
      raise ArgumentError.new("\"bank_employment_report_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @bank_employment_report_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] generated_time Object to be assigned
    def generated_time=(new_value : Time?)
      raise ArgumentError.new("\"generated_time\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @generated_time = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] days_requested Object to be assigned
    def days_requested=(new_value : Int32?)
      raise ArgumentError.new("\"days_requested\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @days_requested = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] items Object to be assigned
    def items=(new_value : Array(Plaid::CreditBankEmploymentItem)?)
      raise ArgumentError.new("\"items\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @items = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] warnings Object to be assigned
    def warnings=(new_value : Array(Plaid::CreditBankEmploymentWarning)?)
      raise ArgumentError.new("\"warnings\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @warnings = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@bank_employment_report_id, @generated_time, @days_requested, @items, @warnings)
  end
end
