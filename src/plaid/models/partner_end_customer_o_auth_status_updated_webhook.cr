#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./partner_end_customer_o_auth_status_updated_values"
require "./webhook_environment_values"

module Plaid
  # The webhook of type `PARTNER` and code `END_CUSTOMER_OAUTH_STATUS_UPDATED` will be fired when a partner's end customer has an update on their OAuth registration status with an institution.
  class PartnerEndCustomerOAuthStatusUpdatedWebhook
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # `PARTNER`
    @[JSON::Field(key: "webhook_type", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter webhook_type : String? = nil

    # `END_CUSTOMER_OAUTH_STATUS_UPDATED`
    @[JSON::Field(key: "webhook_code", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter webhook_code : String? = nil

    # The client ID of the end customer
    @[JSON::Field(key: "end_customer_client_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter end_customer_client_id : String? = nil

    @[JSON::Field(key: "environment", type: Plaid::WebhookEnvironmentValues?, default: nil, required: true, nullable: false, emit_null: false)]
    getter environment : Plaid::WebhookEnvironmentValues? = nil

    # The institution ID
    @[JSON::Field(key: "institution_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter institution_id : String? = nil

    # The institution name
    @[JSON::Field(key: "institution_name", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter institution_name : String? = nil

    @[JSON::Field(key: "status", type: Plaid::PartnerEndCustomerOAuthStatusUpdatedValues?, default: nil, required: true, nullable: false, emit_null: false)]
    getter status : Plaid::PartnerEndCustomerOAuthStatusUpdatedValues? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @webhook_type : String? = nil,
      @webhook_code : String? = nil,
      @end_customer_client_id : String? = nil,
      @environment : Plaid::WebhookEnvironmentValues? = nil,
      @institution_id : String? = nil,
      @institution_name : String? = nil,
      @status : Plaid::PartnerEndCustomerOAuthStatusUpdatedValues? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"webhook_type\" is required and cannot be null") if @webhook_type.nil?

      unless (_webhook_type = @webhook_type).nil?
      end
      invalid_properties.push("\"webhook_code\" is required and cannot be null") if @webhook_code.nil?

      unless (_webhook_code = @webhook_code).nil?
      end
      invalid_properties.push("\"end_customer_client_id\" is required and cannot be null") if @end_customer_client_id.nil?

      unless (_end_customer_client_id = @end_customer_client_id).nil?
      end
      invalid_properties.push("\"environment\" is required and cannot be null") if @environment.nil?

      unless (_environment = @environment).nil?
        invalid_properties.push(_environment.error_message) if !_environment.valid?
      end
      invalid_properties.push("\"institution_id\" is required and cannot be null") if @institution_id.nil?

      unless (_institution_id = @institution_id).nil?
      end
      invalid_properties.push("\"institution_name\" is required and cannot be null") if @institution_name.nil?

      unless (_institution_name = @institution_name).nil?
      end
      invalid_properties.push("\"status\" is required and cannot be null") if @status.nil?

      unless (_status = @status).nil?
        invalid_properties.push(_status.error_message) if !_status.valid?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @webhook_type.nil?
      unless (_webhook_type = @webhook_type).nil?
      end

      return false if @webhook_code.nil?
      unless (_webhook_code = @webhook_code).nil?
      end

      return false if @end_customer_client_id.nil?
      unless (_end_customer_client_id = @end_customer_client_id).nil?
      end

      return false if @environment.nil?
      unless (_environment = @environment).nil?
        return false if !_environment.valid?
      end

      return false if @institution_id.nil?
      unless (_institution_id = @institution_id).nil?
      end

      return false if @institution_name.nil?
      unless (_institution_name = @institution_name).nil?
      end

      return false if @status.nil?
      unless (_status = @status).nil?
        return false if !_status.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook_type Object to be assigned
    def webhook_type=(new_value : String?)
      raise ArgumentError.new("\"webhook_type\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @webhook_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook_code Object to be assigned
    def webhook_code=(new_value : String?)
      raise ArgumentError.new("\"webhook_code\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @webhook_code = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] end_customer_client_id Object to be assigned
    def end_customer_client_id=(new_value : String?)
      raise ArgumentError.new("\"end_customer_client_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @end_customer_client_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] environment Object to be assigned
    def environment=(new_value : Plaid::WebhookEnvironmentValues?)
      raise ArgumentError.new("\"environment\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        new_value.validate
      end

      @environment = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_id Object to be assigned
    def institution_id=(new_value : String?)
      raise ArgumentError.new("\"institution_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @institution_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_name Object to be assigned
    def institution_name=(new_value : String?)
      raise ArgumentError.new("\"institution_name\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @institution_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] status Object to be assigned
    def status=(new_value : Plaid::PartnerEndCustomerOAuthStatusUpdatedValues?)
      raise ArgumentError.new("\"status\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        new_value.validate
      end

      @status = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@webhook_type, @webhook_code, @end_customer_client_id, @environment, @institution_id, @institution_name, @status)
  end
end
