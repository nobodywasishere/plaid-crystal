#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./match_summary_code"

module Plaid
  # Analysis information describing why a screening hit matched the provided user information
  class ScreeningHitAnalysis
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The version of the screening's `search_terms` that were compared when the screening hit was added. screening hits are immutable once they have been reviewed. If changes are detected due to updates to the screening's `search_terms`, the associated program, or the list's source data prior to review, the screening hit will be updated to reflect those changes.
    @[JSON::Field(key: "search_terms_version", type: Int32?, default: nil, required: true, nullable: false, emit_null: false)]
    getter search_terms_version : Int32? = nil

    # End of Required Properties

    # Optional Properties

    @[JSON::Field(key: "dates_of_birth", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter dates_of_birth : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "documents", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter documents : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "locations", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter locations : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "names", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter names : Plaid::MatchSummaryCode? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @search_terms_version : Int32? = nil,
      # Optional properties
      @dates_of_birth : Plaid::MatchSummaryCode? = nil,
      @documents : Plaid::MatchSummaryCode? = nil,
      @locations : Plaid::MatchSummaryCode? = nil,
      @names : Plaid::MatchSummaryCode? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"search_terms_version\" is required and cannot be null") if @search_terms_version.nil?

      unless (_search_terms_version = @search_terms_version).nil?
      end
      unless (_dates_of_birth = @dates_of_birth).nil?
        invalid_properties.push(_dates_of_birth.error_message) if !_dates_of_birth.valid?
      end
      unless (_documents = @documents).nil?
        invalid_properties.push(_documents.error_message) if !_documents.valid?
      end
      unless (_locations = @locations).nil?
        invalid_properties.push(_locations.error_message) if !_locations.valid?
      end
      unless (_names = @names).nil?
        invalid_properties.push(_names.error_message) if !_names.valid?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @search_terms_version.nil?
      unless (_search_terms_version = @search_terms_version).nil?
      end

      unless (_dates_of_birth = @dates_of_birth).nil?
        return false if !_dates_of_birth.valid?
      end

      unless (_documents = @documents).nil?
        return false if !_documents.valid?
      end

      unless (_locations = @locations).nil?
        return false if !_locations.valid?
      end

      unless (_names = @names).nil?
        return false if !_names.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] search_terms_version Object to be assigned
    def search_terms_version=(new_value : Int32?)
      raise ArgumentError.new("\"search_terms_version\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @search_terms_version = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] dates_of_birth Object to be assigned
    def dates_of_birth=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @dates_of_birth = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] documents Object to be assigned
    def documents=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @documents = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] locations Object to be assigned
    def locations=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @locations = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] names Object to be assigned
    def names=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @names = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@search_terms_version, @dates_of_birth, @documents, @locations, @names)
  end
end
