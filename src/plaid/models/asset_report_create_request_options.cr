#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./asset_report_add_ons"
require "./asset_report_user"

module Plaid
  # An optional object to filter `/asset_report/create` results. If provided, must be non-`null`. The optional `user` object is required for the report to be eligible for Fannie Mae's Day 1 Certainty program.
  class AssetReportCreateRequestOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Client-generated identifier, which can be used by lenders to track loan applications.
    @[JSON::Field(key: "client_report_id", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: client_report_id.nil? && !client_report_id_present?)]
    getter client_report_id : String? = nil

    @[JSON::Field(ignore: true)]
    property? client_report_id_present : Bool = false

    # URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
    @[JSON::Field(key: "webhook", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: webhook.nil? && !webhook_present?)]
    getter webhook : String? = nil

    @[JSON::Field(ignore: true)]
    property? webhook_present : Bool = false

    # true to return balance and identity earlier as a fast report. Defaults to false if omitted.
    @[JSON::Field(key: "include_fast_report", type: Bool?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: include_fast_report.nil? && !include_fast_report_present?)]
    getter include_fast_report : Bool? = nil

    @[JSON::Field(ignore: true)]
    property? include_fast_report_present : Bool = false

    # Additional information that can be included in the asset report. Possible values: `\"investments\"`
    @[JSON::Field(key: "products", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter products : Array(String)? = nil

    # Use this field to request a `fast_asset` report. When Fast Assets is requested, Plaid will create two versions of the Asset Report: first, the Fast Asset Report, which will contain only current identity and balance information, and later, the Full Asset Report, which will also contain historical balance information and transaction data. A `PRODUCT_READY` webhook will be fired for each Asset Report when it is ready, and the `report_type` field will indicate whether the webhook is firing for the `full` or `fast` Asset Report. To retrieve the Fast Asset Report, call `/asset_report/get` with `fast_report` set to `true`. There is no additional charge for using Fast Assets.
    @[JSON::Field(key: "add_ons", type: Array(AssetReportAddOns)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter add_ons : Array(AssetReportAddOns)? = nil

    @[JSON::Field(key: "user", type: AssetReportUser?, default: nil, required: false, nullable: false, emit_null: false)]
    getter user : AssetReportUser? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @client_report_id : String? = nil,
      @webhook : String? = nil,
      @include_fast_report : Bool? = nil,
      @products : Array(String)? = nil,
      @add_ons : Array(AssetReportAddOns)? = nil,
      @user : AssetReportUser? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_client_report_id = @client_report_id).nil?
      end
      unless (_webhook = @webhook).nil?
      end
      unless (_include_fast_report = @include_fast_report).nil?
      end
      unless (_products = @products).nil?
      end
      unless (_add_ons = @add_ons).nil?
      end
      unless (_user = @user).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_client_report_id = @client_report_id).nil?
      end

      unless (_webhook = @webhook).nil?
      end

      unless (_include_fast_report = @include_fast_report).nil?
      end

      unless (_products = @products).nil?
      end

      unless (_add_ons = @add_ons).nil?
      end

      unless (_user = @user).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_report_id Object to be assigned
    def client_report_id=(new_value : String?)
      unless new_value.nil?
      end

      @client_report_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook Object to be assigned
    def webhook=(new_value : String?)
      unless new_value.nil?
      end

      @webhook = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] include_fast_report Object to be assigned
    def include_fast_report=(new_value : Bool?)
      unless new_value.nil?
      end

      @include_fast_report = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] products Object to be assigned
    def products=(new_value : Array(String)?)
      unless new_value.nil?
      end

      @products = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] add_ons Object to be assigned
    def add_ons=(new_value : Array(AssetReportAddOns)?)
      unless new_value.nil?
      end

      @add_ons = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] user Object to be assigned
    def user=(new_value : AssetReportUser?)
      unless new_value.nil?
      end

      @user = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@client_report_id, @client_report_id_present, @webhook, @webhook_present, @include_fast_report, @include_fast_report_present, @products, @add_ons, @user)
  end
end
