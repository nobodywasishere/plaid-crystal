#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Metadata about an event that occured while the user was going through Link
  class LinkEventMetadata
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation. Emitted by: all events.
    @[JSON::Field(key: "request_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter request_id : String? = nil

    # End of Required Properties

    # Optional Properties

    # The error code that the user encountered. Emitted by `ERROR`, `EXIT`.
    @[JSON::Field(key: "error_code", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter error_code : String? = nil

    # The error message that the user encountered. Emitted by: `ERROR`, `EXIT`.
    @[JSON::Field(key: "error_message", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter error_message : String? = nil

    # The error type that the user encountered. Emitted by: `ERROR`, `EXIT`.
    @[JSON::Field(key: "error_type", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter error_type : String? = nil

    # The status key indicates the point at which the user exited the Link flow. Emitted by: `EXIT`.
    @[JSON::Field(key: "exit_status", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter exit_status : String? = nil

    # The ID of the selected institution. Emitted by: all events.
    @[JSON::Field(key: "institution_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter institution_id : String? = nil

    # The name of the selected institution. Emitted by: all events.
    @[JSON::Field(key: "institution_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter institution_name : String? = nil

    # The query used to search for institutions. Emitted by: `SEARCH_INSTITUTION`.
    @[JSON::Field(key: "institution_search_query", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter institution_search_query : String? = nil

    # If set, the user has encountered one of the following MFA types: code, device, questions, selections. Emitted by: `SUBMIT_MFA` and `TRANSITION_VIEW` when view_name is `MFA`.
    @[JSON::Field(key: "mfa_type", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter mfa_type : String? = nil

    # The name of the view that is being transitioned to. Emitted by: `TRANSITION_VIEW`.
    @[JSON::Field(key: "view_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter view_name : String? = nil

    # Either the verification method for a matched institution selected by the user or the Auth Type Select flow type selected by the user. If selection is used to describe selected verification method, then possible values are `phoneotp` or `password`;  if selection is used to describe the selected Auth Type Select flow, then possible values are `flow_type_manual` or `flow_type_instant`. Emitted by: `MATCHED_SELECT_VERIFY_METHOD` and `SELECT_AUTH_TYPE`.
    @[JSON::Field(key: "selection", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter selection : String? = nil

    # The name of the selected brand.
    @[JSON::Field(key: "brand_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter brand_name : String? = nil

    # The reason this institution was matched, which will be either `returning_user` or `routing_number`. Emitted by: `MATCHED_SELECT_INSTITUTION`.
    @[JSON::Field(key: "match_reason", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter match_reason : String? = nil

    # The routing number submitted by user at the micro-deposits routing number pane. Emitted by `SUBMIT_ROUTING_NUMBER`.
    @[JSON::Field(key: "routing_number", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter routing_number : String? = nil

    # The account number mask extracted from the user-provided account number. If the user-inputted account number is four digits long, `account_number_mask` is empty. Emitted by `SUBMIT_ACCOUNT_NUMBER`.
    @[JSON::Field(key: "account_number_mask", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter account_number_mask : String? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @request_id : String? = nil,
      # Optional properties
      @error_code : String? = nil,
      @error_message : String? = nil,
      @error_type : String? = nil,
      @exit_status : String? = nil,
      @institution_id : String? = nil,
      @institution_name : String? = nil,
      @institution_search_query : String? = nil,
      @mfa_type : String? = nil,
      @view_name : String? = nil,
      @selection : String? = nil,
      @brand_name : String? = nil,
      @match_reason : String? = nil,
      @routing_number : String? = nil,
      @account_number_mask : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"request_id\" is required and cannot be null") if @request_id.nil?

      unless (_request_id = @request_id).nil?
      end
      unless (_error_code = @error_code).nil?
      end
      unless (_error_message = @error_message).nil?
      end
      unless (_error_type = @error_type).nil?
      end
      unless (_exit_status = @exit_status).nil?
      end
      unless (_institution_id = @institution_id).nil?
      end
      unless (_institution_name = @institution_name).nil?
      end
      unless (_institution_search_query = @institution_search_query).nil?
      end
      unless (_mfa_type = @mfa_type).nil?
      end
      unless (_view_name = @view_name).nil?
      end
      unless (_selection = @selection).nil?
      end
      unless (_brand_name = @brand_name).nil?
      end
      unless (_match_reason = @match_reason).nil?
      end
      unless (_routing_number = @routing_number).nil?
      end
      unless (_account_number_mask = @account_number_mask).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @request_id.nil?
      unless (_request_id = @request_id).nil?
      end

      unless (_error_code = @error_code).nil?
      end

      unless (_error_message = @error_message).nil?
      end

      unless (_error_type = @error_type).nil?
      end

      unless (_exit_status = @exit_status).nil?
      end

      unless (_institution_id = @institution_id).nil?
      end

      unless (_institution_name = @institution_name).nil?
      end

      unless (_institution_search_query = @institution_search_query).nil?
      end

      unless (_mfa_type = @mfa_type).nil?
      end

      unless (_view_name = @view_name).nil?
      end

      unless (_selection = @selection).nil?
      end

      unless (_brand_name = @brand_name).nil?
      end

      unless (_match_reason = @match_reason).nil?
      end

      unless (_routing_number = @routing_number).nil?
      end

      unless (_account_number_mask = @account_number_mask).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] request_id Object to be assigned
    def request_id=(new_value : String?)
      raise ArgumentError.new("\"request_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @request_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] error_code Object to be assigned
    def error_code=(new_value : String?)
      unless new_value.nil?
      end

      @error_code = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] error_message Object to be assigned
    def error_message=(new_value : String?)
      unless new_value.nil?
      end

      @error_message = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] error_type Object to be assigned
    def error_type=(new_value : String?)
      unless new_value.nil?
      end

      @error_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] exit_status Object to be assigned
    def exit_status=(new_value : String?)
      unless new_value.nil?
      end

      @exit_status = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_id Object to be assigned
    def institution_id=(new_value : String?)
      unless new_value.nil?
      end

      @institution_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_name Object to be assigned
    def institution_name=(new_value : String?)
      unless new_value.nil?
      end

      @institution_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_search_query Object to be assigned
    def institution_search_query=(new_value : String?)
      unless new_value.nil?
      end

      @institution_search_query = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] mfa_type Object to be assigned
    def mfa_type=(new_value : String?)
      unless new_value.nil?
      end

      @mfa_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] view_name Object to be assigned
    def view_name=(new_value : String?)
      unless new_value.nil?
      end

      @view_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] selection Object to be assigned
    def selection=(new_value : String?)
      unless new_value.nil?
      end

      @selection = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] brand_name Object to be assigned
    def brand_name=(new_value : String?)
      unless new_value.nil?
      end

      @brand_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] match_reason Object to be assigned
    def match_reason=(new_value : String?)
      unless new_value.nil?
      end

      @match_reason = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] routing_number Object to be assigned
    def routing_number=(new_value : String?)
      unless new_value.nil?
      end

      @routing_number = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] account_number_mask Object to be assigned
    def account_number_mask=(new_value : String?)
      unless new_value.nil?
      end

      @account_number_mask = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@request_id, @error_code, @error_message, @error_type, @exit_status, @institution_id, @institution_name, @institution_search_query, @mfa_type, @view_name, @selection, @brand_name, @match_reason, @routing_number, @account_number_mask)
  end
end
