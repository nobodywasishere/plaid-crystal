#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Instructions for the `custom` retry strategy specifying which steps should be required or skipped.   Note:   This field must be provided when the retry strategy is `custom` and must be omitted otherwise.  Custom retries override settings in your Plaid Template. For example, if your Plaid Template has `verify_sms` disabled, a custom retry with `verify_sms` enabled will still require the step.  The `selfie_check` step is currently not supported on the sandbox server. Sandbox requests will silently disable the `selfie_check` step when provided.
  class IdentityVerificationRetryRequestStepsObject
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # A boolean field specifying whether the new session should require or skip the `verify_sms` step.
    @[JSON::Field(key: "verify_sms", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    getter verify_sms : Bool? = nil

    # A boolean field specifying whether the new session should require or skip the `kyc_check` step.
    @[JSON::Field(key: "kyc_check", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    getter kyc_check : Bool? = nil

    # A boolean field specifying whether the new session should require or skip the `documentary_verification` step.
    @[JSON::Field(key: "documentary_verification", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    getter documentary_verification : Bool? = nil

    # A boolean field specifying whether the new session should require or skip the `selfie_check` step.
    @[JSON::Field(key: "selfie_check", type: Bool?, default: nil, required: true, nullable: false, emit_null: false)]
    getter selfie_check : Bool? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @verify_sms : Bool? = nil,
      @kyc_check : Bool? = nil,
      @documentary_verification : Bool? = nil,
      @selfie_check : Bool? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"verify_sms\" is required and cannot be null") if @verify_sms.nil?

      unless (_verify_sms = @verify_sms).nil?
      end
      invalid_properties.push("\"kyc_check\" is required and cannot be null") if @kyc_check.nil?

      unless (_kyc_check = @kyc_check).nil?
      end
      invalid_properties.push("\"documentary_verification\" is required and cannot be null") if @documentary_verification.nil?

      unless (_documentary_verification = @documentary_verification).nil?
      end
      invalid_properties.push("\"selfie_check\" is required and cannot be null") if @selfie_check.nil?

      unless (_selfie_check = @selfie_check).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @verify_sms.nil?
      unless (_verify_sms = @verify_sms).nil?
      end

      return false if @kyc_check.nil?
      unless (_kyc_check = @kyc_check).nil?
      end

      return false if @documentary_verification.nil?
      unless (_documentary_verification = @documentary_verification).nil?
      end

      return false if @selfie_check.nil?
      unless (_selfie_check = @selfie_check).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] verify_sms Object to be assigned
    def verify_sms=(new_value : Bool?)
      raise ArgumentError.new("\"verify_sms\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @verify_sms = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] kyc_check Object to be assigned
    def kyc_check=(new_value : Bool?)
      raise ArgumentError.new("\"kyc_check\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @kyc_check = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] documentary_verification Object to be assigned
    def documentary_verification=(new_value : Bool?)
      raise ArgumentError.new("\"documentary_verification\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @documentary_verification = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] selfie_check Object to be assigned
    def selfie_check=(new_value : Bool?)
      raise ArgumentError.new("\"selfie_check\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @selfie_check = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@verify_sms, @kyc_check, @documentary_verification, @selfie_check)
  end
end
