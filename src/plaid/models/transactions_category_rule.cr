#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./transactions_rule_details"

module Plaid
  # A representation of a transactions category rule.
  class TransactionsCategoryRule
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # A unique identifier of the rule created
    @[JSON::Field(key: "id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter id : String? = nil

    # A unique identifier of the Item the rule was created for.
    @[JSON::Field(key: "item_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter item_id : String? = nil

    # Date and time when a rule was created in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format ( `YYYY-MM-DDTHH:mm:ssZ` ).
    @[JSON::Field(key: "created_at", type: Time?, default: nil, required: false, nullable: false, emit_null: false, converter: Time::RFC3339Converter)]
    getter created_at : Time? = nil

    # Personal finance category unique identifier.  In the personal finance category taxonomy, this field is represented by the detailed category field.
    @[JSON::Field(key: "personal_finance_category", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter personal_finance_category : String? = nil

    @[JSON::Field(key: "rule_details", type: Plaid::TransactionsRuleDetails?, default: nil, required: false, nullable: false, emit_null: false)]
    getter rule_details : Plaid::TransactionsRuleDetails? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @id : String? = nil,
      @item_id : String? = nil,
      @created_at : Time? = nil,
      @personal_finance_category : String? = nil,
      @rule_details : Plaid::TransactionsRuleDetails? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_id = @id).nil?
      end
      unless (_item_id = @item_id).nil?
      end
      unless (_created_at = @created_at).nil?
      end
      unless (_personal_finance_category = @personal_finance_category).nil?
      end
      unless (_rule_details = @rule_details).nil?
        invalid_properties.concat(_rule_details.list_invalid_properties_for("rule_details")) if _rule_details.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_id = @id).nil?
      end

      unless (_item_id = @item_id).nil?
      end

      unless (_created_at = @created_at).nil?
      end

      unless (_personal_finance_category = @personal_finance_category).nil?
      end

      unless (_rule_details = @rule_details).nil?
        return false if _rule_details.is_a?(OpenApi::Validatable) && !_rule_details.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] id Object to be assigned
    def id=(new_value : String?)
      unless new_value.nil?
      end

      @id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] item_id Object to be assigned
    def item_id=(new_value : String?)
      unless new_value.nil?
      end

      @item_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] created_at Object to be assigned
    def created_at=(new_value : Time?)
      unless new_value.nil?
      end

      @created_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] personal_finance_category Object to be assigned
    def personal_finance_category=(new_value : String?)
      unless new_value.nil?
      end

      @personal_finance_category = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] rule_details Object to be assigned
    def rule_details=(new_value : Plaid::TransactionsRuleDetails?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @rule_details = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@id, @item_id, @created_at, @personal_finance_category, @rule_details)
  end
end
