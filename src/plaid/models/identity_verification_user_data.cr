#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./identity_verification_response_user_name"
require "./identity_verification_user_address"
require "./user_id_number"

module Plaid
  # The identity data that was either collected from the user or provided via API in order to perform an identity verification.
  class IdentityVerificationUserData
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    @[JSON::Field(key: "date_of_birth", type: Time?, default: nil, required: true, nullable: true, emit_null: true, converter: Time::ISO8601DateConverter)]
    getter date_of_birth : Time? = nil

    # An IPv4 or IPV6 address.
    @[JSON::Field(key: "ip_address", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter ip_address : String? = nil

    # A valid email address.
    @[JSON::Field(key: "email_address", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter email_address : String? = nil

    @[JSON::Field(key: "name", type: IdentityVerificationResponseUserName?, default: nil, required: true, nullable: true, emit_null: true)]
    getter name : IdentityVerificationResponseUserName? = nil

    @[JSON::Field(key: "address", type: IdentityVerificationUserAddress?, default: nil, required: true, nullable: true, emit_null: true)]
    getter address : IdentityVerificationUserAddress? = nil

    @[JSON::Field(key: "id_number", type: UserIDNumber?, default: nil, required: true, nullable: true, emit_null: true)]
    getter id_number : UserIDNumber? = nil

    # End of Required Properties

    # Optional Properties

    # A phone number in E.164 format.
    @[JSON::Field(key: "phone_number", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: phone_number.nil? && !phone_number_present?)]
    getter phone_number : String? = nil

    @[JSON::Field(ignore: true)]
    property? phone_number_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @date_of_birth : Time? = nil,
      @ip_address : String? = nil,
      @email_address : String? = nil,
      @name : IdentityVerificationResponseUserName? = nil,
      @address : IdentityVerificationUserAddress? = nil,
      @id_number : UserIDNumber? = nil,
      # Optional properties
      @phone_number : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_date_of_birth = @date_of_birth).nil?
      end
      unless (_ip_address = @ip_address).nil?
      end
      unless (_email_address = @email_address).nil?
      end
      unless (_name = @name).nil?
      end
      unless (_address = @address).nil?
      end
      unless (_id_number = @id_number).nil?
      end
      unless (_phone_number = @phone_number).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_date_of_birth = @date_of_birth).nil?
      end

      unless (_ip_address = @ip_address).nil?
      end

      unless (_email_address = @email_address).nil?
      end

      unless (_name = @name).nil?
      end

      unless (_address = @address).nil?
      end

      unless (_id_number = @id_number).nil?
      end

      unless (_phone_number = @phone_number).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_of_birth Object to be assigned
    def date_of_birth=(new_value : Time?)
      unless new_value.nil?
      end

      @date_of_birth = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] ip_address Object to be assigned
    def ip_address=(new_value : String?)
      unless new_value.nil?
      end

      @ip_address = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] email_address Object to be assigned
    def email_address=(new_value : String?)
      unless new_value.nil?
      end

      @email_address = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] name Object to be assigned
    def name=(new_value : IdentityVerificationResponseUserName?)
      unless new_value.nil?
      end

      @name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] address Object to be assigned
    def address=(new_value : IdentityVerificationUserAddress?)
      unless new_value.nil?
      end

      @address = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] id_number Object to be assigned
    def id_number=(new_value : UserIDNumber?)
      unless new_value.nil?
      end

      @id_number = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] phone_number Object to be assigned
    def phone_number=(new_value : String?)
      unless new_value.nil?
      end

      @phone_number = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@date_of_birth, @ip_address, @email_address, @name, @address, @id_number, @phone_number, @phone_number_present)
  end
end
