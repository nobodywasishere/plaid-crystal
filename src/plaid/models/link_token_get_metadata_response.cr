#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./account_filters_response"
require "./country_code"
require "./link_token_create_institution_data"
require "./products"

module Plaid
  # An object specifying the arguments originally provided to the `/link/token/create` call.
  class LinkTokenGetMetadataResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The `products` specified in the `/link/token/create` call.
    @[JSON::Field(key: "initial_products", type: Array(Products)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter initial_products : Array(Products)? = nil

    # The `webhook` specified in the `/link/token/create` call.
    @[JSON::Field(key: "webhook", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter webhook : String? = nil

    # The `country_codes` specified in the `/link/token/create` call.
    @[JSON::Field(key: "country_codes", type: Array(CountryCode)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter country_codes : Array(CountryCode)? = nil

    # The `language` specified in the `/link/token/create` call.
    @[JSON::Field(key: "language", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter language : String? = nil

    # The `redirect_uri` specified in the `/link/token/create` call.
    @[JSON::Field(key: "redirect_uri", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter redirect_uri : String? = nil

    # The `client_name` specified in the `/link/token/create` call.
    @[JSON::Field(key: "client_name", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter client_name : String? = nil

    # End of Required Properties

    # Optional Properties

    @[JSON::Field(key: "institution_data", type: Plaid::LinkTokenCreateInstitutionData?, default: nil, required: false, nullable: false, emit_null: false)]
    getter institution_data : Plaid::LinkTokenCreateInstitutionData? = nil

    @[JSON::Field(key: "account_filters", type: AccountFiltersResponse?, default: nil, required: false, nullable: false, emit_null: false)]
    getter account_filters : AccountFiltersResponse? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @initial_products : Array(Products)? = nil,
      @webhook : String? = nil,
      @country_codes : Array(CountryCode)? = nil,
      @language : String? = nil,
      @redirect_uri : String? = nil,
      @client_name : String? = nil,
      # Optional properties
      @institution_data : Plaid::LinkTokenCreateInstitutionData? = nil,
      @account_filters : AccountFiltersResponse? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"initial_products\" is required and cannot be null") if @initial_products.nil?

      unless (_initial_products = @initial_products).nil?
      end
      unless (_webhook = @webhook).nil?
      end
      invalid_properties.push("\"country_codes\" is required and cannot be null") if @country_codes.nil?

      unless (_country_codes = @country_codes).nil?
      end
      unless (_language = @language).nil?
      end
      unless (_redirect_uri = @redirect_uri).nil?
      end
      unless (_client_name = @client_name).nil?
      end
      unless (_institution_data = @institution_data).nil?
        invalid_properties.concat(_institution_data.list_invalid_properties_for("institution_data")) if _institution_data.is_a?(OpenApi::Validatable)
      end
      unless (_account_filters = @account_filters).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @initial_products.nil?
      unless (_initial_products = @initial_products).nil?
      end

      unless (_webhook = @webhook).nil?
      end

      return false if @country_codes.nil?
      unless (_country_codes = @country_codes).nil?
      end

      unless (_language = @language).nil?
      end

      unless (_redirect_uri = @redirect_uri).nil?
      end

      unless (_client_name = @client_name).nil?
      end

      unless (_institution_data = @institution_data).nil?
        return false if _institution_data.is_a?(OpenApi::Validatable) && !_institution_data.valid?
      end

      unless (_account_filters = @account_filters).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] initial_products Object to be assigned
    def initial_products=(new_value : Array(Products)?)
      raise ArgumentError.new("\"initial_products\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @initial_products = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook Object to be assigned
    def webhook=(new_value : String?)
      unless new_value.nil?
      end

      @webhook = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] country_codes Object to be assigned
    def country_codes=(new_value : Array(CountryCode)?)
      raise ArgumentError.new("\"country_codes\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @country_codes = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] language Object to be assigned
    def language=(new_value : String?)
      unless new_value.nil?
      end

      @language = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] redirect_uri Object to be assigned
    def redirect_uri=(new_value : String?)
      unless new_value.nil?
      end

      @redirect_uri = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_name Object to be assigned
    def client_name=(new_value : String?)
      unless new_value.nil?
      end

      @client_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_data Object to be assigned
    def institution_data=(new_value : Plaid::LinkTokenCreateInstitutionData?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @institution_data = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] account_filters Object to be assigned
    def account_filters=(new_value : AccountFiltersResponse?)
      unless new_value.nil?
      end

      @account_filters = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@initial_products, @webhook, @country_codes, @language, @redirect_uri, @client_name, @institution_data, @account_filters)
  end
end
