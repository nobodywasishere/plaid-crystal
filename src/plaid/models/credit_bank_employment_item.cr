#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./credit_bank_employment"
require "./credit_bank_income_account"

module Plaid
  # The details and metadata for an end user's Item.
  class CreditBankEmploymentItem
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The unique identifier for the Item.
    @[JSON::Field(key: "item_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter item_id : String? = nil

    # The time when this Item's data was last retrieved from the financial institution, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (e.g. \"2018-04-12T03:32:11Z\").
    @[JSON::Field(key: "last_updated_time", type: Time?, default: nil, required: true, nullable: false, emit_null: false, converter: Time::RFC3339Converter)]
    getter last_updated_time : Time? = nil

    # The unique identifier of the institution associated with the Item.
    @[JSON::Field(key: "institution_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter institution_id : String? = nil

    # The name of the institution associated with the Item.
    @[JSON::Field(key: "institution_name", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter institution_name : String? = nil

    # The bank employment information for this Item. Each entry in the array is a different employer found.
    @[JSON::Field(key: "bank_employments", type: Array(Plaid::CreditBankEmployment)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter bank_employments : Array(Plaid::CreditBankEmployment)? = nil

    # The Item's accounts that have Bank Employment data.
    @[JSON::Field(key: "bank_employment_accounts", type: Array(Plaid::CreditBankIncomeAccount)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter bank_employment_accounts : Array(Plaid::CreditBankIncomeAccount)? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @item_id : String? = nil,
      @last_updated_time : Time? = nil,
      @institution_id : String? = nil,
      @institution_name : String? = nil,
      @bank_employments : Array(Plaid::CreditBankEmployment)? = nil,
      @bank_employment_accounts : Array(Plaid::CreditBankIncomeAccount)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"item_id\" is required and cannot be null") if @item_id.nil?

      unless (_item_id = @item_id).nil?
      end
      invalid_properties.push("\"last_updated_time\" is required and cannot be null") if @last_updated_time.nil?

      unless (_last_updated_time = @last_updated_time).nil?
      end
      invalid_properties.push("\"institution_id\" is required and cannot be null") if @institution_id.nil?

      unless (_institution_id = @institution_id).nil?
      end
      invalid_properties.push("\"institution_name\" is required and cannot be null") if @institution_name.nil?

      unless (_institution_name = @institution_name).nil?
      end
      invalid_properties.push("\"bank_employments\" is required and cannot be null") if @bank_employments.nil?

      unless (_bank_employments = @bank_employments).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "bank_employments", container: _bank_employments)) if _bank_employments.is_a?(Array)
      end
      invalid_properties.push("\"bank_employment_accounts\" is required and cannot be null") if @bank_employment_accounts.nil?

      unless (_bank_employment_accounts = @bank_employment_accounts).nil?
        invalid_properties.concat(OpenApi::ContainerValidator.list_invalid_properties_for(key: "bank_employment_accounts", container: _bank_employment_accounts)) if _bank_employment_accounts.is_a?(Array)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @item_id.nil?
      unless (_item_id = @item_id).nil?
      end

      return false if @last_updated_time.nil?
      unless (_last_updated_time = @last_updated_time).nil?
      end

      return false if @institution_id.nil?
      unless (_institution_id = @institution_id).nil?
      end

      return false if @institution_name.nil?
      unless (_institution_name = @institution_name).nil?
      end

      return false if @bank_employments.nil?
      unless (_bank_employments = @bank_employments).nil?
        return false if _bank_employments.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _bank_employments)
      end

      return false if @bank_employment_accounts.nil?
      unless (_bank_employment_accounts = @bank_employment_accounts).nil?
        return false if _bank_employment_accounts.is_a?(Array) && !OpenApi::ContainerValidator.valid?(container: _bank_employment_accounts)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] item_id Object to be assigned
    def item_id=(new_value : String?)
      raise ArgumentError.new("\"item_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @item_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] last_updated_time Object to be assigned
    def last_updated_time=(new_value : Time?)
      raise ArgumentError.new("\"last_updated_time\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @last_updated_time = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_id Object to be assigned
    def institution_id=(new_value : String?)
      raise ArgumentError.new("\"institution_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @institution_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution_name Object to be assigned
    def institution_name=(new_value : String?)
      raise ArgumentError.new("\"institution_name\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @institution_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_employments Object to be assigned
    def bank_employments=(new_value : Array(Plaid::CreditBankEmployment)?)
      raise ArgumentError.new("\"bank_employments\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @bank_employments = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_employment_accounts Object to be assigned
    def bank_employment_accounts=(new_value : Array(Plaid::CreditBankIncomeAccount)?)
      raise ArgumentError.new("\"bank_employment_accounts\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        OpenApi::ContainerValidator.validate(container: new_value) if new_value.is_a?(Array)
      end

      @bank_employment_accounts = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@item_id, @last_updated_time, @institution_id, @institution_name, @bank_employments, @bank_employment_accounts)
  end
end
