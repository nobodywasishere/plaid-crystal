#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Information about the last webhook fired for the Item.
  class ItemStatusLastWebhook
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # [ISO 8601](https://wikipedia.org/wiki/ISO_8601) timestamp of when the webhook was fired.
    @[JSON::Field(key: "sent_at", type: Time?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: sent_at.nil? && !sent_at_present?, converter: Time::RFC3339Converter)]
    getter sent_at : Time? = nil

    @[JSON::Field(ignore: true)]
    property? sent_at_present : Bool = false

    # The last webhook code sent.
    @[JSON::Field(key: "code_sent", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: code_sent.nil? && !code_sent_present?)]
    getter code_sent : String? = nil

    @[JSON::Field(ignore: true)]
    property? code_sent_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @sent_at : Time? = nil,
      @code_sent : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_sent_at = @sent_at).nil?
      end
      unless (_code_sent = @code_sent).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_sent_at = @sent_at).nil?
      end

      unless (_code_sent = @code_sent).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] sent_at Object to be assigned
    def sent_at=(new_value : Time?)
      unless new_value.nil?
      end

      @sent_at = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] code_sent Object to be assigned
    def code_sent=(new_value : String?)
      unless new_value.nil?
      end

      @code_sent = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@sent_at, @sent_at_present, @code_sent, @code_sent_present)
  end
end
