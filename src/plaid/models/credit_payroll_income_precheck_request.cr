#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./income_verification_precheck_employer"
require "./income_verification_precheck_military_info"
require "./income_verification_precheck_payroll_institution"

module Plaid
  # Defines the request schema for `/credit/payroll_income/precheck`.
  class CreditPayrollIncomePrecheckRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    @[JSON::Field(key: "client_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter client_id : String? = nil

    # Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    @[JSON::Field(key: "secret", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter secret : String? = nil

    # The user token associated with the User data is being requested for.
    @[JSON::Field(key: "user_token", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter user_token : String? = nil

    # An array of access tokens corresponding to Items belonging to the user whose eligibility is being checked. Note that if the Items specified here are not already initialized with `transactions`, providing them in this field will cause these Items to be initialized with (and billed for) the Transactions product.
    @[JSON::Field(key: "access_tokens", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter access_tokens : Array(String)? = nil

    @[JSON::Field(key: "employer", type: Plaid::IncomeVerificationPrecheckEmployer?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: employer.nil? && !employer_present?)]
    getter employer : Plaid::IncomeVerificationPrecheckEmployer? = nil

    @[JSON::Field(ignore: true)]
    property? employer_present : Bool = false

    @[JSON::Field(key: "us_military_info", type: Plaid::IncomeVerificationPrecheckMilitaryInfo?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: us_military_info.nil? && !us_military_info_present?)]
    getter us_military_info : Plaid::IncomeVerificationPrecheckMilitaryInfo? = nil

    @[JSON::Field(ignore: true)]
    property? us_military_info_present : Bool = false

    @[JSON::Field(key: "payroll_institution", type: Plaid::IncomeVerificationPrecheckPayrollInstitution?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: payroll_institution.nil? && !payroll_institution_present?)]
    getter payroll_institution : Plaid::IncomeVerificationPrecheckPayrollInstitution? = nil

    @[JSON::Field(ignore: true)]
    property? payroll_institution_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @client_id : String? = nil,
      @secret : String? = nil,
      @user_token : String? = nil,
      @access_tokens : Array(String)? = nil,
      @employer : Plaid::IncomeVerificationPrecheckEmployer? = nil,
      @us_military_info : Plaid::IncomeVerificationPrecheckMilitaryInfo? = nil,
      @payroll_institution : Plaid::IncomeVerificationPrecheckPayrollInstitution? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_client_id = @client_id).nil?
      end
      unless (_secret = @secret).nil?
      end
      unless (_user_token = @user_token).nil?
      end
      unless (_access_tokens = @access_tokens).nil?
      end
      unless (_employer = @employer).nil?
        invalid_properties.concat(_employer.list_invalid_properties_for("employer")) if _employer.is_a?(OpenApi::Validatable)
      end
      unless (_us_military_info = @us_military_info).nil?
        invalid_properties.concat(_us_military_info.list_invalid_properties_for("us_military_info")) if _us_military_info.is_a?(OpenApi::Validatable)
      end
      unless (_payroll_institution = @payroll_institution).nil?
        invalid_properties.concat(_payroll_institution.list_invalid_properties_for("payroll_institution")) if _payroll_institution.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_client_id = @client_id).nil?
      end

      unless (_secret = @secret).nil?
      end

      unless (_user_token = @user_token).nil?
      end

      unless (_access_tokens = @access_tokens).nil?
      end

      unless (_employer = @employer).nil?
        return false if _employer.is_a?(OpenApi::Validatable) && !_employer.valid?
      end

      unless (_us_military_info = @us_military_info).nil?
        return false if _us_military_info.is_a?(OpenApi::Validatable) && !_us_military_info.valid?
      end

      unless (_payroll_institution = @payroll_institution).nil?
        return false if _payroll_institution.is_a?(OpenApi::Validatable) && !_payroll_institution.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_id Object to be assigned
    def client_id=(new_value : String?)
      unless new_value.nil?
      end

      @client_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] secret Object to be assigned
    def secret=(new_value : String?)
      unless new_value.nil?
      end

      @secret = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] user_token Object to be assigned
    def user_token=(new_value : String?)
      unless new_value.nil?
      end

      @user_token = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] access_tokens Object to be assigned
    def access_tokens=(new_value : Array(String)?)
      unless new_value.nil?
      end

      @access_tokens = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] employer Object to be assigned
    def employer=(new_value : Plaid::IncomeVerificationPrecheckEmployer?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @employer = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] us_military_info Object to be assigned
    def us_military_info=(new_value : Plaid::IncomeVerificationPrecheckMilitaryInfo?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @us_military_info = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] payroll_institution Object to be assigned
    def payroll_institution=(new_value : Plaid::IncomeVerificationPrecheckPayrollInstitution?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @payroll_institution = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@client_id, @secret, @user_token, @access_tokens, @employer, @employer_present, @us_military_info, @us_military_info_present, @payroll_institution, @payroll_institution_present)
  end
end
