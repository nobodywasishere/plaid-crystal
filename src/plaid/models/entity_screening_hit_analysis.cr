#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./match_summary_code"

module Plaid
  # Analysis information describing why a screening hit matched the provided entity information
  class EntityScreeningHitAnalysis
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The version of the entity screening's `search_terms` that were compared when the entity screening hit was added. entity screening hits are immutable once they have been reviewed. If changes are detected due to updates to the entity screening's `search_terms`, the associated entity program, or the list's source data prior to review, the entity screening hit will be updated to reflect those changes.
    @[JSON::Field(key: "search_terms_version", type: Int32?, default: nil, required: true, nullable: false, emit_null: false)]
    getter search_terms_version : Int32? = nil

    # End of Required Properties

    # Optional Properties

    @[JSON::Field(key: "documents", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter documents : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "email_addresses", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter email_addresses : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "locations", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter locations : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "names", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter names : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "phone_numbers", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter phone_numbers : Plaid::MatchSummaryCode? = nil

    @[JSON::Field(key: "urls", type: Plaid::MatchSummaryCode?, default: nil, required: false, nullable: false, emit_null: false)]
    getter urls : Plaid::MatchSummaryCode? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @search_terms_version : Int32? = nil,
      # Optional properties
      @documents : Plaid::MatchSummaryCode? = nil,
      @email_addresses : Plaid::MatchSummaryCode? = nil,
      @locations : Plaid::MatchSummaryCode? = nil,
      @names : Plaid::MatchSummaryCode? = nil,
      @phone_numbers : Plaid::MatchSummaryCode? = nil,
      @urls : Plaid::MatchSummaryCode? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"search_terms_version\" is required and cannot be null") if @search_terms_version.nil?

      unless (_search_terms_version = @search_terms_version).nil?
      end
      unless (_documents = @documents).nil?
        invalid_properties.push(_documents.error_message) if !_documents.valid?
      end
      unless (_email_addresses = @email_addresses).nil?
        invalid_properties.push(_email_addresses.error_message) if !_email_addresses.valid?
      end
      unless (_locations = @locations).nil?
        invalid_properties.push(_locations.error_message) if !_locations.valid?
      end
      unless (_names = @names).nil?
        invalid_properties.push(_names.error_message) if !_names.valid?
      end
      unless (_phone_numbers = @phone_numbers).nil?
        invalid_properties.push(_phone_numbers.error_message) if !_phone_numbers.valid?
      end
      unless (_urls = @urls).nil?
        invalid_properties.push(_urls.error_message) if !_urls.valid?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @search_terms_version.nil?
      unless (_search_terms_version = @search_terms_version).nil?
      end

      unless (_documents = @documents).nil?
        return false if !_documents.valid?
      end

      unless (_email_addresses = @email_addresses).nil?
        return false if !_email_addresses.valid?
      end

      unless (_locations = @locations).nil?
        return false if !_locations.valid?
      end

      unless (_names = @names).nil?
        return false if !_names.valid?
      end

      unless (_phone_numbers = @phone_numbers).nil?
        return false if !_phone_numbers.valid?
      end

      unless (_urls = @urls).nil?
        return false if !_urls.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] search_terms_version Object to be assigned
    def search_terms_version=(new_value : Int32?)
      raise ArgumentError.new("\"search_terms_version\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @search_terms_version = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] documents Object to be assigned
    def documents=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @documents = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] email_addresses Object to be assigned
    def email_addresses=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @email_addresses = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] locations Object to be assigned
    def locations=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @locations = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] names Object to be assigned
    def names=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @names = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] phone_numbers Object to be assigned
    def phone_numbers=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @phone_numbers = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] urls Object to be assigned
    def urls=(new_value : Plaid::MatchSummaryCode?)
      unless new_value.nil?
        new_value.validate
      end

      @urls = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@search_terms_version, @documents, @email_addresses, @locations, @names, @phone_numbers, @urls)
  end
end
