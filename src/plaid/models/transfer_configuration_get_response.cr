#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Defines the response schema for `/transfer/configuration/get`
  class TransferConfigurationGetResponse
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # A unique identifier for the request, which can be used for troubleshooting. This identifier, like all Plaid identifiers, is case sensitive.
    @[JSON::Field(key: "request_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter request_id : String? = nil

    # The max limit of dollar amount of a single transfer (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_single_transfer_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_single_transfer_amount : String? = nil

    # The max limit of dollar amount of a single credit transfer (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_single_transfer_credit_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_single_transfer_credit_amount : String? = nil

    # The max limit of dollar amount of a single debit transfer (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_single_transfer_debit_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_single_transfer_debit_amount : String? = nil

    # The max limit of sum of dollar amount of credit transfers in last 24 hours (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_daily_credit_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_daily_credit_amount : String? = nil

    # The max limit of sum of dollar amount of debit transfers in last 24 hours (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_daily_debit_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_daily_debit_amount : String? = nil

    # The max limit of sum of dollar amount of credit and debit transfers in one calendar month (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_monthly_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_monthly_amount : String? = nil

    # The max limit of sum of dollar amount of credit transfers in one calendar month (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_monthly_credit_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_monthly_credit_amount : String? = nil

    # The max limit of sum of dollar amount of debit transfers in one calendar month (decimal string with two digits of precision e.g. \"10.00\").
    @[JSON::Field(key: "max_monthly_debit_amount", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter max_monthly_debit_amount : String? = nil

    # The currency of the dollar amount, e.g. \"USD\".
    @[JSON::Field(key: "iso_currency_code", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter iso_currency_code : String? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @request_id : String? = nil,
      @max_single_transfer_amount : String? = nil,
      @max_single_transfer_credit_amount : String? = nil,
      @max_single_transfer_debit_amount : String? = nil,
      @max_daily_credit_amount : String? = nil,
      @max_daily_debit_amount : String? = nil,
      @max_monthly_amount : String? = nil,
      @max_monthly_credit_amount : String? = nil,
      @max_monthly_debit_amount : String? = nil,
      @iso_currency_code : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"request_id\" is required and cannot be null") if @request_id.nil?

      unless (_request_id = @request_id).nil?
      end
      invalid_properties.push("\"max_single_transfer_amount\" is required and cannot be null") if @max_single_transfer_amount.nil?

      unless (_max_single_transfer_amount = @max_single_transfer_amount).nil?
      end
      invalid_properties.push("\"max_single_transfer_credit_amount\" is required and cannot be null") if @max_single_transfer_credit_amount.nil?

      unless (_max_single_transfer_credit_amount = @max_single_transfer_credit_amount).nil?
      end
      invalid_properties.push("\"max_single_transfer_debit_amount\" is required and cannot be null") if @max_single_transfer_debit_amount.nil?

      unless (_max_single_transfer_debit_amount = @max_single_transfer_debit_amount).nil?
      end
      invalid_properties.push("\"max_daily_credit_amount\" is required and cannot be null") if @max_daily_credit_amount.nil?

      unless (_max_daily_credit_amount = @max_daily_credit_amount).nil?
      end
      invalid_properties.push("\"max_daily_debit_amount\" is required and cannot be null") if @max_daily_debit_amount.nil?

      unless (_max_daily_debit_amount = @max_daily_debit_amount).nil?
      end
      invalid_properties.push("\"max_monthly_amount\" is required and cannot be null") if @max_monthly_amount.nil?

      unless (_max_monthly_amount = @max_monthly_amount).nil?
      end
      invalid_properties.push("\"max_monthly_credit_amount\" is required and cannot be null") if @max_monthly_credit_amount.nil?

      unless (_max_monthly_credit_amount = @max_monthly_credit_amount).nil?
      end
      invalid_properties.push("\"max_monthly_debit_amount\" is required and cannot be null") if @max_monthly_debit_amount.nil?

      unless (_max_monthly_debit_amount = @max_monthly_debit_amount).nil?
      end
      invalid_properties.push("\"iso_currency_code\" is required and cannot be null") if @iso_currency_code.nil?

      unless (_iso_currency_code = @iso_currency_code).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @request_id.nil?
      unless (_request_id = @request_id).nil?
      end

      return false if @max_single_transfer_amount.nil?
      unless (_max_single_transfer_amount = @max_single_transfer_amount).nil?
      end

      return false if @max_single_transfer_credit_amount.nil?
      unless (_max_single_transfer_credit_amount = @max_single_transfer_credit_amount).nil?
      end

      return false if @max_single_transfer_debit_amount.nil?
      unless (_max_single_transfer_debit_amount = @max_single_transfer_debit_amount).nil?
      end

      return false if @max_daily_credit_amount.nil?
      unless (_max_daily_credit_amount = @max_daily_credit_amount).nil?
      end

      return false if @max_daily_debit_amount.nil?
      unless (_max_daily_debit_amount = @max_daily_debit_amount).nil?
      end

      return false if @max_monthly_amount.nil?
      unless (_max_monthly_amount = @max_monthly_amount).nil?
      end

      return false if @max_monthly_credit_amount.nil?
      unless (_max_monthly_credit_amount = @max_monthly_credit_amount).nil?
      end

      return false if @max_monthly_debit_amount.nil?
      unless (_max_monthly_debit_amount = @max_monthly_debit_amount).nil?
      end

      return false if @iso_currency_code.nil?
      unless (_iso_currency_code = @iso_currency_code).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] request_id Object to be assigned
    def request_id=(new_value : String?)
      raise ArgumentError.new("\"request_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @request_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_single_transfer_amount Object to be assigned
    def max_single_transfer_amount=(new_value : String?)
      raise ArgumentError.new("\"max_single_transfer_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_single_transfer_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_single_transfer_credit_amount Object to be assigned
    def max_single_transfer_credit_amount=(new_value : String?)
      raise ArgumentError.new("\"max_single_transfer_credit_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_single_transfer_credit_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_single_transfer_debit_amount Object to be assigned
    def max_single_transfer_debit_amount=(new_value : String?)
      raise ArgumentError.new("\"max_single_transfer_debit_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_single_transfer_debit_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_daily_credit_amount Object to be assigned
    def max_daily_credit_amount=(new_value : String?)
      raise ArgumentError.new("\"max_daily_credit_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_daily_credit_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_daily_debit_amount Object to be assigned
    def max_daily_debit_amount=(new_value : String?)
      raise ArgumentError.new("\"max_daily_debit_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_daily_debit_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_monthly_amount Object to be assigned
    def max_monthly_amount=(new_value : String?)
      raise ArgumentError.new("\"max_monthly_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_monthly_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_monthly_credit_amount Object to be assigned
    def max_monthly_credit_amount=(new_value : String?)
      raise ArgumentError.new("\"max_monthly_credit_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_monthly_credit_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] max_monthly_debit_amount Object to be assigned
    def max_monthly_debit_amount=(new_value : String?)
      raise ArgumentError.new("\"max_monthly_debit_amount\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @max_monthly_debit_amount = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] iso_currency_code Object to be assigned
    def iso_currency_code=(new_value : String?)
      raise ArgumentError.new("\"iso_currency_code\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @iso_currency_code = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@request_id, @max_single_transfer_amount, @max_single_transfer_credit_amount, @max_single_transfer_debit_amount, @max_daily_credit_amount, @max_daily_debit_amount, @max_monthly_amount, @max_monthly_credit_amount, @max_monthly_debit_amount, @iso_currency_code)
  end
end
