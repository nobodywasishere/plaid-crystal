#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./link_delivery_account"
require "./link_delivery_institution"
require "./link_delivery_webhook_callback_type"
require "./link_event_name"

module Plaid
  # Information related to the callback from the hosted Link session.
  class LinkCallbackMetadata
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "callback_type", type: Plaid::LinkDeliveryWebhookCallbackType?, default: nil, required: false, nullable: false, emit_null: false)]
    getter callback_type : Plaid::LinkDeliveryWebhookCallbackType? = nil

    @[JSON::Field(key: "event_name", type: Plaid::LinkEventName?, default: nil, required: false, nullable: false, emit_null: false)]
    getter event_name : Plaid::LinkEventName? = nil

    # Indicates where in the flow the Link user exited
    @[JSON::Field(key: "status", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter status : String? = nil

    # A unique identifier associated with a user's actions and events through the Link flow. Include this identifier when opening a support ticket for faster turnaround.
    @[JSON::Field(key: "link_session_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter link_session_id : String? = nil

    # The request ID for the last request made by Link. This can be shared with Plaid Support to expedite investigation.
    @[JSON::Field(key: "request_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter request_id : String? = nil

    @[JSON::Field(key: "institution", type: LinkDeliveryInstitution?, default: nil, required: false, nullable: false, emit_null: false)]
    getter institution : LinkDeliveryInstitution? = nil

    # A list of accounts attached to the connected Item. If Account Select is enabled via the developer dashboard, accounts will only include selected accounts.
    @[JSON::Field(key: "accounts", type: Array(LinkDeliveryAccount)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter accounts : Array(LinkDeliveryAccount)? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @callback_type : Plaid::LinkDeliveryWebhookCallbackType? = nil,
      @event_name : Plaid::LinkEventName? = nil,
      @status : String? = nil,
      @link_session_id : String? = nil,
      @request_id : String? = nil,
      @institution : LinkDeliveryInstitution? = nil,
      @accounts : Array(LinkDeliveryAccount)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_callback_type = @callback_type).nil?
        invalid_properties.push(_callback_type.error_message) if !_callback_type.valid?
      end
      unless (_event_name = @event_name).nil?
        invalid_properties.push(_event_name.error_message) if !_event_name.valid?
      end
      unless (_status = @status).nil?
      end
      unless (_link_session_id = @link_session_id).nil?
      end
      unless (_request_id = @request_id).nil?
      end
      unless (_institution = @institution).nil?
      end
      unless (_accounts = @accounts).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_callback_type = @callback_type).nil?
        return false if !_callback_type.valid?
      end

      unless (_event_name = @event_name).nil?
        return false if !_event_name.valid?
      end

      unless (_status = @status).nil?
      end

      unless (_link_session_id = @link_session_id).nil?
      end

      unless (_request_id = @request_id).nil?
      end

      unless (_institution = @institution).nil?
      end

      unless (_accounts = @accounts).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] callback_type Object to be assigned
    def callback_type=(new_value : Plaid::LinkDeliveryWebhookCallbackType?)
      unless new_value.nil?
        new_value.validate
      end

      @callback_type = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] event_name Object to be assigned
    def event_name=(new_value : Plaid::LinkEventName?)
      unless new_value.nil?
        new_value.validate
      end

      @event_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] status Object to be assigned
    def status=(new_value : String?)
      unless new_value.nil?
      end

      @status = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] link_session_id Object to be assigned
    def link_session_id=(new_value : String?)
      unless new_value.nil?
      end

      @link_session_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] request_id Object to be assigned
    def request_id=(new_value : String?)
      unless new_value.nil?
      end

      @request_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] institution Object to be assigned
    def institution=(new_value : LinkDeliveryInstitution?)
      unless new_value.nil?
      end

      @institution = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] accounts Object to be assigned
    def accounts=(new_value : Array(LinkDeliveryAccount)?)
      unless new_value.nil?
      end

      @accounts = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@callback_type, @event_name, @status, @link_session_id, @request_id, @institution, @accounts)
  end
end
