#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Options to configure the `/deposit_switch/create` request. If provided, cannot be `null`.
  class DepositSwitchCreateRequestOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The URL registered to receive webhooks when the status of a deposit switch request has changed.
    @[JSON::Field(key: "webhook", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: webhook.nil? && !webhook_present?)]
    getter webhook : String? = nil

    @[JSON::Field(ignore: true)]
    property? webhook_present : Bool = false

    # An array of access tokens corresponding to transaction items to use when attempting to match the user to their Payroll Provider. These tokens must be created by the same client id as the one creating the switch, and have access to the transactions product.
    @[JSON::Field(key: "transaction_item_access_tokens", type: Array(String)?, default: nil, required: false, nullable: false, emit_null: false)]
    getter transaction_item_access_tokens : Array(String)? = nil
    MAX_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS = 99
    MIN_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS =  1

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @webhook : String? = nil,
      @transaction_item_access_tokens : Array(String)? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_webhook = @webhook).nil?
      end
      unless (_transaction_item_access_tokens = @transaction_item_access_tokens).nil?
        if max_items_error = OpenApi::PrimitiveValidator.max_items_error("transaction_item_access_tokens", _transaction_item_access_tokens.size, MAX_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS)
          invalid_properties.push(max_items_error)
        end

        if min_items_error = OpenApi::PrimitiveValidator.min_items_error("transaction_item_access_tokens", _transaction_item_access_tokens.size, MIN_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS)
          invalid_properties.push(min_items_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_webhook = @webhook).nil?
      end

      unless (_transaction_item_access_tokens = @transaction_item_access_tokens).nil?
        return false if _transaction_item_access_tokens.size > MAX_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS
        return false if _transaction_item_access_tokens.size < MIN_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook Object to be assigned
    def webhook=(new_value : String?)
      unless new_value.nil?
      end

      @webhook = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] transaction_item_access_tokens Object to be assigned
    def transaction_item_access_tokens=(new_value : Array(String)?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_items("transaction_item_access_tokens", new_value.size, MAX_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS)
        OpenApi::PrimitiveValidator.validate_min_items("transaction_item_access_tokens", new_value.size, MIN_ITEMS_FOR_TRANSACTION_ITEM_ACCESS_TOKENS)
      end

      @transaction_item_access_tokens = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@webhook, @webhook_present, @transaction_item_access_tokens)
  end
end
