#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Metadata about the application
  class Application
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # This field will map to the application ID that is returned from /item/application/list, or provided to the institution in an oauth redirect.
    @[JSON::Field(key: "application_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter application_id : String? = nil

    # The name of the application
    @[JSON::Field(key: "name", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter name : String? = nil

    # A human-readable name of the application for display purposes
    @[JSON::Field(key: "display_name", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter display_name : String? = nil

    # The date this application was granted production access at Plaid in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format in UTC.
    @[JSON::Field(key: "join_date", type: Time?, default: nil, required: true, nullable: false, emit_null: false, converter: Time::ISO8601DateConverter)]
    getter join_date : Time? = nil

    # A URL that links to the application logo image.
    @[JSON::Field(key: "logo_url", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter logo_url : String? = nil

    # The URL for the application's website
    @[JSON::Field(key: "application_url", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter application_url : String? = nil

    # A string provided by the connected app stating why they use their respective enabled products.
    @[JSON::Field(key: "reason_for_access", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter reason_for_access : String? = nil

    # A string representing client’s broad use case as assessed by Plaid.
    @[JSON::Field(key: "use_case", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter use_case : String? = nil

    # A string representing the name of client’s legal entity.
    @[JSON::Field(key: "company_legal_name", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter company_legal_name : String? = nil

    # A string representing the city of the client’s headquarters.
    @[JSON::Field(key: "city", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter city : String? = nil

    # A string representing the region of the client’s headquarters.
    @[JSON::Field(key: "region", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter region : String? = nil

    # A string representing the postal code of the client’s headquarters.
    @[JSON::Field(key: "postal_code", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter postal_code : String? = nil

    # A string representing the country code of the client’s headquarters.
    @[JSON::Field(key: "country_code", type: String?, default: nil, required: true, nullable: true, emit_null: true)]
    getter country_code : String? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @application_id : String? = nil,
      @name : String? = nil,
      @display_name : String? = nil,
      @join_date : Time? = nil,
      @logo_url : String? = nil,
      @application_url : String? = nil,
      @reason_for_access : String? = nil,
      @use_case : String? = nil,
      @company_legal_name : String? = nil,
      @city : String? = nil,
      @region : String? = nil,
      @postal_code : String? = nil,
      @country_code : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"application_id\" is required and cannot be null") if @application_id.nil?

      unless (_application_id = @application_id).nil?
      end
      invalid_properties.push("\"name\" is required and cannot be null") if @name.nil?

      unless (_name = @name).nil?
      end
      unless (_display_name = @display_name).nil?
      end
      invalid_properties.push("\"join_date\" is required and cannot be null") if @join_date.nil?

      unless (_join_date = @join_date).nil?
      end
      unless (_logo_url = @logo_url).nil?
      end
      unless (_application_url = @application_url).nil?
      end
      unless (_reason_for_access = @reason_for_access).nil?
      end
      unless (_use_case = @use_case).nil?
      end
      unless (_company_legal_name = @company_legal_name).nil?
      end
      unless (_city = @city).nil?
      end
      unless (_region = @region).nil?
      end
      unless (_postal_code = @postal_code).nil?
      end
      unless (_country_code = @country_code).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @application_id.nil?
      unless (_application_id = @application_id).nil?
      end

      return false if @name.nil?
      unless (_name = @name).nil?
      end

      unless (_display_name = @display_name).nil?
      end

      return false if @join_date.nil?
      unless (_join_date = @join_date).nil?
      end

      unless (_logo_url = @logo_url).nil?
      end

      unless (_application_url = @application_url).nil?
      end

      unless (_reason_for_access = @reason_for_access).nil?
      end

      unless (_use_case = @use_case).nil?
      end

      unless (_company_legal_name = @company_legal_name).nil?
      end

      unless (_city = @city).nil?
      end

      unless (_region = @region).nil?
      end

      unless (_postal_code = @postal_code).nil?
      end

      unless (_country_code = @country_code).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] application_id Object to be assigned
    def application_id=(new_value : String?)
      raise ArgumentError.new("\"application_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @application_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] name Object to be assigned
    def name=(new_value : String?)
      raise ArgumentError.new("\"name\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] display_name Object to be assigned
    def display_name=(new_value : String?)
      unless new_value.nil?
      end

      @display_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] join_date Object to be assigned
    def join_date=(new_value : Time?)
      raise ArgumentError.new("\"join_date\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @join_date = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] logo_url Object to be assigned
    def logo_url=(new_value : String?)
      unless new_value.nil?
      end

      @logo_url = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] application_url Object to be assigned
    def application_url=(new_value : String?)
      unless new_value.nil?
      end

      @application_url = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] reason_for_access Object to be assigned
    def reason_for_access=(new_value : String?)
      unless new_value.nil?
      end

      @reason_for_access = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] use_case Object to be assigned
    def use_case=(new_value : String?)
      unless new_value.nil?
      end

      @use_case = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] company_legal_name Object to be assigned
    def company_legal_name=(new_value : String?)
      unless new_value.nil?
      end

      @company_legal_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] city Object to be assigned
    def city=(new_value : String?)
      unless new_value.nil?
      end

      @city = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] region Object to be assigned
    def region=(new_value : String?)
      unless new_value.nil?
      end

      @region = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] postal_code Object to be assigned
    def postal_code=(new_value : String?)
      unless new_value.nil?
      end

      @postal_code = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] country_code Object to be assigned
    def country_code=(new_value : String?)
      unless new_value.nil?
      end

      @country_code = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@application_id, @name, @display_name, @join_date, @logo_url, @application_url, @reason_for_access, @use_case, @company_legal_name, @city, @region, @postal_code, @country_code)
  end
end
