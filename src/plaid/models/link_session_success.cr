#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./link_session_success_metadata"

module Plaid
  # An object representing an [onSuccess](https://plaid.com/docs/link/web/#onsuccess) callback from Link.
  class LinkSessionSuccess
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # Displayed once a user has successfully linked their Item.
    @[JSON::Field(key: "public_token", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter public_token : String? = nil

    @[JSON::Field(key: "metadata", type: Plaid::LinkSessionSuccessMetadata?, default: nil, required: true, nullable: true, emit_null: true)]
    getter metadata : Plaid::LinkSessionSuccessMetadata? = nil

    # End of Required Properties

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @public_token : String? = nil,
      @metadata : Plaid::LinkSessionSuccessMetadata? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"public_token\" is required and cannot be null") if @public_token.nil?

      unless (_public_token = @public_token).nil?
      end
      unless (_metadata = @metadata).nil?
        invalid_properties.concat(_metadata.list_invalid_properties_for("metadata")) if _metadata.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @public_token.nil?
      unless (_public_token = @public_token).nil?
      end

      unless (_metadata = @metadata).nil?
        return false if _metadata.is_a?(OpenApi::Validatable) && !_metadata.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] public_token Object to be assigned
    def public_token=(new_value : String?)
      raise ArgumentError.new("\"public_token\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @public_token = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] metadata Object to be assigned
    def metadata=(new_value : Plaid::LinkSessionSuccessMetadata?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @metadata = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@public_token, @metadata)
  end
end
