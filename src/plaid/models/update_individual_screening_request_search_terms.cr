#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Search terms for editing an individual watchlist screening
  class UpdateIndividualScreeningRequestSearchTerms
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # ID of the associated program.
    @[JSON::Field(key: "watchlist_program_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter watchlist_program_id : String? = nil

    # The legal name of the individual being screened.
    @[JSON::Field(key: "legal_name", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter legal_name : String? = nil
    MIN_LENGTH_FOR_LEGAL_NAME = 1

    # A date in the format YYYY-MM-DD (RFC 3339 Section 5.6).
    @[JSON::Field(key: "date_of_birth", type: Time?, default: nil, required: false, nullable: false, emit_null: false, converter: Time::ISO8601DateConverter)]
    getter date_of_birth : Time? = nil

    # The numeric or alphanumeric identifier associated with this document.
    @[JSON::Field(key: "document_number", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter document_number : String? = nil
    MIN_LENGTH_FOR_DOCUMENT_NUMBER = 4

    # Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
    @[JSON::Field(key: "country", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter country : String? = nil
    MIN_LENGTH_FOR_COUNTRY = 2

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @watchlist_program_id : String? = nil,
      @legal_name : String? = nil,
      @date_of_birth : Time? = nil,
      @document_number : String? = nil,
      @country : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_watchlist_program_id = @watchlist_program_id).nil?
      end
      unless (_legal_name = @legal_name).nil?
        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("legal_name", _legal_name.to_s.size, MIN_LENGTH_FOR_LEGAL_NAME)
          invalid_properties.push(min_length_error)
        end
      end
      unless (_date_of_birth = @date_of_birth).nil?
      end
      unless (_document_number = @document_number).nil?
        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("document_number", _document_number.to_s.size, MIN_LENGTH_FOR_DOCUMENT_NUMBER)
          invalid_properties.push(min_length_error)
        end
      end
      unless (_country = @country).nil?
        if min_length_error = OpenApi::PrimitiveValidator.min_length_error("country", _country.to_s.size, MIN_LENGTH_FOR_COUNTRY)
          invalid_properties.push(min_length_error)
        end
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_watchlist_program_id = @watchlist_program_id).nil?
      end

      unless (_legal_name = @legal_name).nil?
        return false if _legal_name.to_s.size < MIN_LENGTH_FOR_LEGAL_NAME
      end

      unless (_date_of_birth = @date_of_birth).nil?
      end

      unless (_document_number = @document_number).nil?
        return false if _document_number.to_s.size < MIN_LENGTH_FOR_DOCUMENT_NUMBER
      end

      unless (_country = @country).nil?
        return false if _country.to_s.size < MIN_LENGTH_FOR_COUNTRY
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] watchlist_program_id Object to be assigned
    def watchlist_program_id=(new_value : String?)
      unless new_value.nil?
      end

      @watchlist_program_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] legal_name Object to be assigned
    def legal_name=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_min_length("legal_name", new_value.to_s.size, MIN_LENGTH_FOR_LEGAL_NAME)
      end

      @legal_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] date_of_birth Object to be assigned
    def date_of_birth=(new_value : Time?)
      unless new_value.nil?
      end

      @date_of_birth = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] document_number Object to be assigned
    def document_number=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_min_length("document_number", new_value.to_s.size, MIN_LENGTH_FOR_DOCUMENT_NUMBER)
      end

      @document_number = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] country Object to be assigned
    def country=(new_value : String?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_min_length("country", new_value.to_s.size, MIN_LENGTH_FOR_COUNTRY)
      end

      @country = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@watchlist_program_id, @legal_name, @date_of_birth, @document_number, @country)
  end
end
