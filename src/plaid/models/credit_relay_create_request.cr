#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # CreditRelayCreateRequest defines the request schema for `/credit/relay/create`
  class CreditRelayCreateRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # List of report token strings, with at most one token of each report type. Currently only Asset Report token is supported.
    @[JSON::Field(key: "report_tokens", type: Array(String)?, default: nil, required: true, nullable: false, emit_null: false)]
    getter report_tokens : Array(String)? = nil

    # The `secondary_client_id` is the client id of the third party with whom you would like to share the relay token.
    @[JSON::Field(key: "secondary_client_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter secondary_client_id : String? = nil

    # End of Required Properties

    # Optional Properties

    # Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    @[JSON::Field(key: "client_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter client_id : String? = nil

    # Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    @[JSON::Field(key: "secret", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter secret : String? = nil

    # URL to which Plaid will send webhooks when the Secondary Client successfully retrieves an Asset Report by calling `/credit/relay/get`.
    @[JSON::Field(key: "webhook", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: webhook.nil? && !webhook_present?)]
    getter webhook : String? = nil

    @[JSON::Field(ignore: true)]
    property? webhook_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @report_tokens : Array(String)? = nil,
      @secondary_client_id : String? = nil,
      # Optional properties
      @client_id : String? = nil,
      @secret : String? = nil,
      @webhook : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"report_tokens\" is required and cannot be null") if @report_tokens.nil?

      unless (_report_tokens = @report_tokens).nil?
      end
      invalid_properties.push("\"secondary_client_id\" is required and cannot be null") if @secondary_client_id.nil?

      unless (_secondary_client_id = @secondary_client_id).nil?
      end
      unless (_client_id = @client_id).nil?
      end
      unless (_secret = @secret).nil?
      end
      unless (_webhook = @webhook).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @report_tokens.nil?
      unless (_report_tokens = @report_tokens).nil?
      end

      return false if @secondary_client_id.nil?
      unless (_secondary_client_id = @secondary_client_id).nil?
      end

      unless (_client_id = @client_id).nil?
      end

      unless (_secret = @secret).nil?
      end

      unless (_webhook = @webhook).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] report_tokens Object to be assigned
    def report_tokens=(new_value : Array(String)?)
      raise ArgumentError.new("\"report_tokens\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @report_tokens = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] secondary_client_id Object to be assigned
    def secondary_client_id=(new_value : String?)
      raise ArgumentError.new("\"secondary_client_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @secondary_client_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_id Object to be assigned
    def client_id=(new_value : String?)
      unless new_value.nil?
      end

      @client_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] secret Object to be assigned
    def secret=(new_value : String?)
      unless new_value.nil?
      end

      @secret = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook Object to be assigned
    def webhook=(new_value : String?)
      unless new_value.nil?
      end

      @webhook = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@report_tokens, @secondary_client_id, @client_id, @secret, @webhook, @webhook_present)
  end
end
