#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./bank_initiated_return_risk"
require "./customer_initiated_return_risk"

module Plaid
  # Risk scoring details broken down by risk category.
  class SignalScores
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    @[JSON::Field(key: "customer_initiated_return_risk", type: Plaid::CustomerInitiatedReturnRisk?, default: nil, required: false, nullable: false, emit_null: false)]
    getter customer_initiated_return_risk : Plaid::CustomerInitiatedReturnRisk? = nil

    @[JSON::Field(key: "bank_initiated_return_risk", type: Plaid::BankInitiatedReturnRisk?, default: nil, required: false, nullable: false, emit_null: false)]
    getter bank_initiated_return_risk : Plaid::BankInitiatedReturnRisk? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @customer_initiated_return_risk : Plaid::CustomerInitiatedReturnRisk? = nil,
      @bank_initiated_return_risk : Plaid::BankInitiatedReturnRisk? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_customer_initiated_return_risk = @customer_initiated_return_risk).nil?
        invalid_properties.concat(_customer_initiated_return_risk.list_invalid_properties_for("customer_initiated_return_risk")) if _customer_initiated_return_risk.is_a?(OpenApi::Validatable)
      end
      unless (_bank_initiated_return_risk = @bank_initiated_return_risk).nil?
        invalid_properties.concat(_bank_initiated_return_risk.list_invalid_properties_for("bank_initiated_return_risk")) if _bank_initiated_return_risk.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_customer_initiated_return_risk = @customer_initiated_return_risk).nil?
        return false if _customer_initiated_return_risk.is_a?(OpenApi::Validatable) && !_customer_initiated_return_risk.valid?
      end

      unless (_bank_initiated_return_risk = @bank_initiated_return_risk).nil?
        return false if _bank_initiated_return_risk.is_a?(OpenApi::Validatable) && !_bank_initiated_return_risk.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] customer_initiated_return_risk Object to be assigned
    def customer_initiated_return_risk=(new_value : Plaid::CustomerInitiatedReturnRisk?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @customer_initiated_return_risk = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] bank_initiated_return_risk Object to be assigned
    def bank_initiated_return_risk=(new_value : Plaid::BankInitiatedReturnRisk?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @bank_initiated_return_risk = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@customer_initiated_return_risk, @bank_initiated_return_risk)
  end
end
