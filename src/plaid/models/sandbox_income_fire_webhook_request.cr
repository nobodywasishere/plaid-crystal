#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./sandbox_income_webhook_fire_request_webhook_code"

module Plaid
  # SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
  class SandboxIncomeFireWebhookRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The Item ID associated with the verification.
    @[JSON::Field(key: "item_id", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter item_id : String? = nil

    # The URL to which the webhook should be sent.
    @[JSON::Field(key: "webhook", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter webhook : String? = nil

    @[JSON::Field(key: "webhook_code", type: Plaid::SandboxIncomeWebhookFireRequestWebhookCode?, default: nil, required: true, nullable: false, emit_null: false)]
    getter webhook_code : Plaid::SandboxIncomeWebhookFireRequestWebhookCode? = nil

    # End of Required Properties

    # Optional Properties

    # Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    @[JSON::Field(key: "client_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter client_id : String? = nil

    # Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    @[JSON::Field(key: "secret", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter secret : String? = nil

    # The Plaid `user_id` of the User associated with this webhook, warning, or error.
    @[JSON::Field(key: "user_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter user_id : String? = nil

    # `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.  `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.  `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
    @[JSON::Field(key: "verification_status", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter verification_status : String? = nil
    ERROR_MESSAGE_FOR_VERIFICATION_STATUS = "invalid value for \"verification_status\", must be one of [VERIFICATION_STATUS_PROCESSING_COMPLETE, VERIFICATION_STATUS_PROCESSING_FAILED, VERIFICATION_STATUS_PENDING_APPROVAL]."
    VALID_VALUES_FOR_VERIFICATION_STATUS  = String.static_array("VERIFICATION_STATUS_PROCESSING_COMPLETE", "VERIFICATION_STATUS_PROCESSING_FAILED", "VERIFICATION_STATUS_PENDING_APPROVAL")

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @item_id : String? = nil,
      @webhook : String? = nil,
      @webhook_code : Plaid::SandboxIncomeWebhookFireRequestWebhookCode? = nil,
      # Optional properties
      @client_id : String? = nil,
      @secret : String? = nil,
      @user_id : String? = nil,
      @verification_status : String? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"item_id\" is required and cannot be null") if @item_id.nil?

      unless (_item_id = @item_id).nil?
      end
      invalid_properties.push("\"webhook\" is required and cannot be null") if @webhook.nil?

      unless (_webhook = @webhook).nil?
      end
      invalid_properties.push("\"webhook_code\" is required and cannot be null") if @webhook_code.nil?

      unless (_webhook_code = @webhook_code).nil?
        invalid_properties.push(_webhook_code.error_message) if !_webhook_code.valid?
      end
      unless (_client_id = @client_id).nil?
      end
      unless (_secret = @secret).nil?
      end
      unless (_user_id = @user_id).nil?
      end
      unless (_verification_status = @verification_status).nil?
        invalid_properties.push(ERROR_MESSAGE_FOR_VERIFICATION_STATUS) unless OpenApi::EnumValidator.valid?(_verification_status, VALID_VALUES_FOR_VERIFICATION_STATUS)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @item_id.nil?
      unless (_item_id = @item_id).nil?
      end

      return false if @webhook.nil?
      unless (_webhook = @webhook).nil?
      end

      return false if @webhook_code.nil?
      unless (_webhook_code = @webhook_code).nil?
        return false if !_webhook_code.valid?
      end

      unless (_client_id = @client_id).nil?
      end

      unless (_secret = @secret).nil?
      end

      unless (_user_id = @user_id).nil?
      end

      unless (_verification_status = @verification_status).nil?
        return false unless OpenApi::EnumValidator.valid?(_verification_status, VALID_VALUES_FOR_VERIFICATION_STATUS)
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] item_id Object to be assigned
    def item_id=(new_value : String?)
      raise ArgumentError.new("\"item_id\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @item_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook Object to be assigned
    def webhook=(new_value : String?)
      raise ArgumentError.new("\"webhook\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @webhook = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] webhook_code Object to be assigned
    def webhook_code=(new_value : Plaid::SandboxIncomeWebhookFireRequestWebhookCode?)
      raise ArgumentError.new("\"webhook_code\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
        new_value.validate
      end

      @webhook_code = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_id Object to be assigned
    def client_id=(new_value : String?)
      unless new_value.nil?
      end

      @client_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] secret Object to be assigned
    def secret=(new_value : String?)
      unless new_value.nil?
      end

      @secret = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] user_id Object to be assigned
    def user_id=(new_value : String?)
      unless new_value.nil?
      end

      @user_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] verification_status Object to be assigned
    def verification_status=(new_value : String?)
      unless new_value.nil?
        OpenApi::EnumValidator.validate("verification_status", new_value, VALID_VALUES_FOR_VERIFICATION_STATUS)
      end

      @verification_status = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@item_id, @webhook, @webhook_code, @client_id, @secret, @user_id, @verification_status)
  end
end
