#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./address_data_nullable_no_required_fields"

module Plaid
  # The user's legal name, phone number, email address and address used to perform fuzzy match. If Financial Account Matching is enabled in the Identity Verification product, leave this field empty to automatically match against PII collected from the Identity Verification checks.
  class IdentityMatchUser
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # The user's full legal name.
    @[JSON::Field(key: "legal_name", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: legal_name.nil? && !legal_name_present?)]
    getter legal_name : String? = nil

    @[JSON::Field(ignore: true)]
    property? legal_name_present : Bool = false

    # The user's phone number, in E.164 format: +{countrycode}{number}. For example: \"+14151234567\". Phone numbers provided in other formats will be parsed on a best-effort basis.
    @[JSON::Field(key: "phone_number", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: phone_number.nil? && !phone_number_present?)]
    getter phone_number : String? = nil

    @[JSON::Field(ignore: true)]
    property? phone_number_present : Bool = false

    # The user's email address.
    @[JSON::Field(key: "email_address", type: String?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: email_address.nil? && !email_address_present?)]
    getter email_address : String? = nil

    @[JSON::Field(ignore: true)]
    property? email_address_present : Bool = false

    @[JSON::Field(key: "address", type: Plaid::AddressDataNullableNoRequiredFields?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: address.nil? && !address_present?)]
    getter address : Plaid::AddressDataNullableNoRequiredFields? = nil

    @[JSON::Field(ignore: true)]
    property? address_present : Bool = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @legal_name : String? = nil,
      @phone_number : String? = nil,
      @email_address : String? = nil,
      @address : Plaid::AddressDataNullableNoRequiredFields? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_legal_name = @legal_name).nil?
      end
      unless (_phone_number = @phone_number).nil?
      end
      unless (_email_address = @email_address).nil?
      end
      unless (_address = @address).nil?
        invalid_properties.concat(_address.list_invalid_properties_for("address")) if _address.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_legal_name = @legal_name).nil?
      end

      unless (_phone_number = @phone_number).nil?
      end

      unless (_email_address = @email_address).nil?
      end

      unless (_address = @address).nil?
        return false if _address.is_a?(OpenApi::Validatable) && !_address.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] legal_name Object to be assigned
    def legal_name=(new_value : String?)
      unless new_value.nil?
      end

      @legal_name = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] phone_number Object to be assigned
    def phone_number=(new_value : String?)
      unless new_value.nil?
      end

      @phone_number = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] email_address Object to be assigned
    def email_address=(new_value : String?)
      unless new_value.nil?
      end

      @email_address = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] address Object to be assigned
    def address=(new_value : Plaid::AddressDataNullableNoRequiredFields?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @address = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@legal_name, @legal_name_present, @phone_number, @phone_number_present, @email_address, @email_address_present, @address, @address_present)
  end
end
