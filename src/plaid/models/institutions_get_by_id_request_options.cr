#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Specifies optional parameters for `/institutions/get_by_id`. If provided, must not be `null`.
  class InstitutionsGetByIdRequestOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # When `true`, return an institution's logo, brand color, and URL. When available, the bank's logo is returned as a base64 encoded 152x152 PNG, the brand color is in hexadecimal format. The default value is `false`.  Note that Plaid does not own any of the logos shared by the API and that by accessing or using these logos, you agree that you are doing so at your own risk and will, if necessary, obtain all required permissions from the appropriate rights holders and adhere to any applicable usage guidelines. Plaid disclaims all express or implied warranties with respect to the logos.
    @[JSON::Field(key: "include_optional_metadata", type: Bool?, default: false, required: false, nullable: false, emit_null: false)]
    getter include_optional_metadata : Bool? = false

    # If `true`, the response will include status information about the institution. Default value is `false`.
    @[JSON::Field(key: "include_status", type: Bool?, default: false, required: false, nullable: false, emit_null: false)]
    getter include_status : Bool? = false

    # When `true`, returns metadata related to the Auth product indicating which auth methods are supported.
    @[JSON::Field(key: "include_auth_metadata", type: Bool?, default: false, required: false, nullable: false, emit_null: false)]
    getter include_auth_metadata : Bool? = false

    # When `true`, returns metadata related to the Payment Initiation product indicating which payment configurations are supported.
    @[JSON::Field(key: "include_payment_initiation_metadata", type: Bool?, default: false, required: false, nullable: false, emit_null: false)]
    getter include_payment_initiation_metadata : Bool? = false

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @include_optional_metadata : Bool? = false,
      @include_status : Bool? = false,
      @include_auth_metadata : Bool? = false,
      @include_payment_initiation_metadata : Bool? = false
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_include_optional_metadata = @include_optional_metadata).nil?
      end
      unless (_include_status = @include_status).nil?
      end
      unless (_include_auth_metadata = @include_auth_metadata).nil?
      end
      unless (_include_payment_initiation_metadata = @include_payment_initiation_metadata).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_include_optional_metadata = @include_optional_metadata).nil?
      end

      unless (_include_status = @include_status).nil?
      end

      unless (_include_auth_metadata = @include_auth_metadata).nil?
      end

      unless (_include_payment_initiation_metadata = @include_payment_initiation_metadata).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] include_optional_metadata Object to be assigned
    def include_optional_metadata=(new_value : Bool?)
      unless new_value.nil?
      end

      @include_optional_metadata = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] include_status Object to be assigned
    def include_status=(new_value : Bool?)
      unless new_value.nil?
      end

      @include_status = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] include_auth_metadata Object to be assigned
    def include_auth_metadata=(new_value : Bool?)
      unless new_value.nil?
      end

      @include_auth_metadata = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] include_payment_initiation_metadata Object to be assigned
    def include_payment_initiation_metadata=(new_value : Bool?)
      unless new_value.nil?
      end

      @include_payment_initiation_metadata = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@include_optional_metadata, @include_status, @include_auth_metadata, @include_payment_initiation_metadata)
  end
end
