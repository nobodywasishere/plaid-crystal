#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  # Additional wallet transaction options
  class WalletTransactionListRequestOptions
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Optional Properties

    # Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDThh:mm:ssZ) for filtering transactions, inclusive of the provided date.
    @[JSON::Field(key: "start_time", type: Time?, default: nil, required: false, nullable: false, emit_null: false, converter: Time::RFC3339Converter)]
    getter start_time : Time? = nil

    # Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDThh:mm:ssZ) for filtering transactions, inclusive of the provided date.
    @[JSON::Field(key: "end_time", type: Time?, default: nil, required: false, nullable: false, emit_null: false, converter: Time::RFC3339Converter)]
    getter end_time : Time? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Optional properties
      @start_time : Time? = nil,
      @end_time : Time? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      unless (_start_time = @start_time).nil?
      end
      unless (_end_time = @end_time).nil?
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      unless (_start_time = @start_time).nil?
      end

      unless (_end_time = @end_time).nil?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] start_time Object to be assigned
    def start_time=(new_value : Time?)
      unless new_value.nil?
      end

      @start_time = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] end_time Object to be assigned
    def end_time=(new_value : Time?)
      unless new_value.nil?
      end

      @end_time = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@start_time, @end_time)
  end
end
