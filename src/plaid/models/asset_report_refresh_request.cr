#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

require "./asset_report_refresh_request_options"

module Plaid
  # AssetReportRefreshRequest defines the request schema for `/asset_report/refresh`
  class AssetReportRefreshRequest
    include JSON::Serializable
    include JSON::Serializable::Unmapped
    include OpenApi::Validatable
    include OpenApi::Json

    # Required Properties

    # The `asset_report_token` returned by the original call to `/asset_report/create`
    @[JSON::Field(key: "asset_report_token", type: String?, default: nil, required: true, nullable: false, emit_null: false)]
    getter asset_report_token : String? = nil

    # End of Required Properties

    # Optional Properties

    # Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
    @[JSON::Field(key: "client_id", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter client_id : String? = nil

    # Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
    @[JSON::Field(key: "secret", type: String?, default: nil, required: false, nullable: false, emit_null: false)]
    getter secret : String? = nil

    # The maximum number of days of history to include in the Asset Report. Must be an integer. If not specified, the value from the original call to `/asset_report/create` will be used.
    @[JSON::Field(key: "days_requested", type: Int32?, default: nil, required: false, nullable: true, emit_null: true, presence: true, ignore_serialize: days_requested.nil? && !days_requested_present?)]
    getter days_requested : Int32? = nil
    MAX_FOR_DAYS_REQUESTED = Int32.new("731")
    MIN_FOR_DAYS_REQUESTED = Int32.new("0")

    @[JSON::Field(ignore: true)]
    property? days_requested_present : Bool = false

    @[JSON::Field(key: "options", type: Plaid::AssetReportRefreshRequestOptions?, default: nil, required: false, nullable: false, emit_null: false)]
    getter options : Plaid::AssetReportRefreshRequestOptions? = nil

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(
      *,
      # Required properties
      @asset_report_token : String? = nil,
      # Optional properties
      @client_id : String? = nil,
      @secret : String? = nil,
      @days_requested : Int32? = nil,
      @options : Plaid::AssetReportRefreshRequestOptions? = nil
    )
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties : Array(String)
      invalid_properties = Array(String).new

      invalid_properties.push("\"asset_report_token\" is required and cannot be null") if @asset_report_token.nil?

      unless (_asset_report_token = @asset_report_token).nil?
      end
      unless (_client_id = @client_id).nil?
      end
      unless (_secret = @secret).nil?
      end
      unless (_days_requested = @days_requested).nil?
        if max_number_error = OpenApi::PrimitiveValidator.max_number_error("days_requested", _days_requested, MAX_FOR_DAYS_REQUESTED)
          invalid_properties.push(max_number_error)
        end

        if min_number_error = OpenApi::PrimitiveValidator.min_number_error("days_requested", _days_requested, MIN_FOR_DAYS_REQUESTED)
          invalid_properties.push(min_number_error)
        end
      end
      unless (_options = @options).nil?
        invalid_properties.concat(_options.list_invalid_properties_for("options")) if _options.is_a?(OpenApi::Validatable)
      end
      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid? : Bool
      return false if @asset_report_token.nil?
      unless (_asset_report_token = @asset_report_token).nil?
      end

      unless (_client_id = @client_id).nil?
      end

      unless (_secret = @secret).nil?
      end

      unless (_days_requested = @days_requested).nil?
        return false if _days_requested > MAX_FOR_DAYS_REQUESTED
        return false if _days_requested < MIN_FOR_DAYS_REQUESTED
      end

      unless (_options = @options).nil?
        return false if _options.is_a?(OpenApi::Validatable) && !_options.valid?
      end

      true
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] asset_report_token Object to be assigned
    def asset_report_token=(new_value : String?)
      raise ArgumentError.new("\"asset_report_token\" is required and cannot be null") if new_value.nil?
      unless new_value.nil?
      end

      @asset_report_token = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] client_id Object to be assigned
    def client_id=(new_value : String?)
      unless new_value.nil?
      end

      @client_id = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] secret Object to be assigned
    def secret=(new_value : String?)
      unless new_value.nil?
      end

      @secret = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] days_requested Object to be assigned
    def days_requested=(new_value : Int32?)
      unless new_value.nil?
        OpenApi::PrimitiveValidator.validate_max_number("days_requested", new_value, MAX_FOR_DAYS_REQUESTED)
        OpenApi::PrimitiveValidator.validate_min_number("days_requested", new_value, MIN_FOR_DAYS_REQUESTED)
      end

      @days_requested = new_value
    end

    # Custom attribute writer method checking allowed values (enum).
    # @param [Object] options Object to be assigned
    def options=(new_value : Plaid::AssetReportRefreshRequestOptions?)
      unless new_value.nil?
        new_value.validate if new_value.is_a?(OpenApi::Validatable)
      end

      @options = new_value
    end

    # Generates #hash and #== methods from all fields
    # #== @return [Bool]
    # #hash calculates hash code according to all attributes.
    # #hash @return [UInt64] Hash code
    def_equals_and_hash(@asset_report_token, @client_id, @secret, @days_requested, @days_requested_present, @options)
  end
end
