#  The Plaid API
#
# The Plaid REST API. Please see https://plaid.com/docs/api for more details.
#
# The version of the OpenAPI document: 2020-09-14_1.474.3
#
# Generated by: https://openapi-generator.tech
#

require "../../core"

module Plaid
  class AssetTransactionCategoryType
    include OpenApi::Validatable
    include OpenApi::Json

    property data : String

    ERROR_MESSAGE = %{invalid value for "AssetTransactionCategoryType", must be one of ["ATMFee", "Advertising", "AirTravel", "AlcoholBars", "Allowance", "Amusement", "Arts", "AutoTransport", "AutoInsurance", "AutoPayment", "BabySupplies", "BabysitterDaycare", "BankFee", "BillsUtilities", "Bonus", "BooksSupplies", "Business Services", "Buy", "CashATM", "Charity", "Check", "ChildSupport", "Clothing", "CoffeeShops", "CreditCardPayment", "Dentist", "Doctor", "Education", "ElectronicsSoftware", "Entertainment", "Eyecare", "FastFood", "FederalTax", "FeesCharges", "FinanceCharge", "Financial", "FinancialAdvisor", "FoodDining", "Furnishings", "GasFuel", "GiftsDonations", "Groceries", "Gym", "Hair", "HealthFitness", "HealthInsurance", "Hobbies", "Home", "HomeImprovement", "HomeInsurance", "HomePhone", "HomeServices", "HomeSupplies", "Hotel", "Income", "InterestIncome", "Internet", "Investments", "Kids", "KidsActivities", "LateFee", "Laundry", "LawnGarden", "Legal", "LifeInsurance", "LoanInsurance", "LoanPayment", "Loans", "MobilePhone", "MortgageRent", "MoviesDVDs", "Music", "NewspapersMagazines", "OfficeSupplies", "Parking", "Paycheck", "PersonalCare", "PetFoodSupplies", "PetGrooming", "Pets", "Pharmacy", "Printing", "Property Tax", "Public Transportation", "Reimbursement", "RentalCarTaxi", "Restaurants", "SalesTax", "ServiceParts", "ServiceFee", "Shipping", "Shopping", "SpaMassage", "SportingGoods", "Sports", "StateTax", "Student Loan", "Taxes", "Television", "Toys", "Transfer", "Travel", "Tuition", "Uncategorized", "Utilities", "Vacation", "Veterinary"].}

    VALID_VALUES = String.static_array("ATMFee", "Advertising", "AirTravel", "AlcoholBars", "Allowance", "Amusement", "Arts", "AutoTransport", "AutoInsurance", "AutoPayment", "BabySupplies", "BabysitterDaycare", "BankFee", "BillsUtilities", "Bonus", "BooksSupplies", "Business Services", "Buy", "CashATM", "Charity", "Check", "ChildSupport", "Clothing", "CoffeeShops", "CreditCardPayment", "Dentist", "Doctor", "Education", "ElectronicsSoftware", "Entertainment", "Eyecare", "FastFood", "FederalTax", "FeesCharges", "FinanceCharge", "Financial", "FinancialAdvisor", "FoodDining", "Furnishings", "GasFuel", "GiftsDonations", "Groceries", "Gym", "Hair", "HealthFitness", "HealthInsurance", "Hobbies", "Home", "HomeImprovement", "HomeInsurance", "HomePhone", "HomeServices", "HomeSupplies", "Hotel", "Income", "InterestIncome", "Internet", "Investments", "Kids", "KidsActivities", "LateFee", "Laundry", "LawnGarden", "Legal", "LifeInsurance", "LoanInsurance", "LoanPayment", "Loans", "MobilePhone", "MortgageRent", "MoviesDVDs", "Music", "NewspapersMagazines", "OfficeSupplies", "Parking", "Paycheck", "PersonalCare", "PetFoodSupplies", "PetGrooming", "Pets", "Pharmacy", "Printing", "Property Tax", "Public Transportation", "Reimbursement", "RentalCarTaxi", "Restaurants", "SalesTax", "ServiceParts", "ServiceFee", "Shipping", "Shopping", "SpaMassage", "SportingGoods", "Sports", "StateTax", "Student Loan", "Taxes", "Television", "Toys", "Transfer", "Travel", "Tuition", "Uncategorized", "Utilities", "Vacation", "Veterinary")

    delegate to_json_object_key, to: @data

    def self.from_json(value : JSON::PullParser) : AssetTransactionCategoryType
      new(value)
    end

    def self.to_json(value : AssetTransactionCategoryType, json : JSON::Builder) : Nil
      value.to_json(json)
    end

    def self.new(pull : JSON::PullParser)
      new(String.new(pull), false)
    end

    def self.from_json_object_key?(key : String)
      String.from_json_object_key?(key)
    end

    def initialize(@data : String, strict : Bool = true)
      validate if strict
    end

    def error_message : String
      ERROR_MESSAGE
    end

    def list_invalid_properties : Array(String)
      errors = Array(String).new
      errors.push(error_message) unless valid?
      errors
    end

    def valid? : Bool
      OpenApi::EnumValidator.valid?(data, VALID_VALUES, false)
    end

    def validate : Nil
      OpenApi::EnumValidator.validate("AssetTransactionCategoryType", data, VALID_VALUES, false)
    end

    def to_json(json : JSON::Builder) : Nil
      @data.to_json(json)
    end

    def_equals_and_hash(@data)
  end
end
